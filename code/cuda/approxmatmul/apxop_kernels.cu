#include <torch/extension.h>
#include <cuda.h>
#include <cuda_runtime.h>
#include <vector>
#include <iostream>
#include <stdint.h>
#include <stdlib.h>

#include <curand.h>
#include <curand_kernel.h>

// Approimate multipliers from https://ehw.fit.vutbr.cz/evoapproxlib/?folder=multiplers/8x8_signed
// V. Mrazek, Z. Vasicek, L. Sekanina, H. Jiang and J. Han, Scalable Construction of Approximate Multipliers With Formally Guaranteed Worst Case Error in IEEE Transactions on Very Large Scale Integration (VLSI) Systems, vol. 26, no. 11, pp. 2572-2576, Nov. 2018.

// main functions and kernels are in the end after approximators
__device__ int16_t mul8s_1KV6(int8_t A, int8_t B)
{
  int16_t P, P_;
  uint8_t tmp, C_1_0,C_1_1,C_1_2,C_1_3,C_1_4,C_1_5,C_1_6,C_1_7,C_2_0,C_2_1,C_2_2,C_2_3,C_2_4,C_2_5,C_2_6,C_2_7,C_3_0,C_3_1,C_3_2,C_3_3,C_3_4,C_3_5,C_3_6,C_3_7,C_4_0,C_4_1,C_4_2,C_4_3,C_4_4,C_4_5,C_4_6,C_4_7,C_5_0,C_5_1,C_5_2,C_5_3,C_5_4,C_5_5,C_5_6,C_5_7,C_6_0,C_6_1,C_6_2,C_6_3,C_6_4,C_6_5,C_6_6,C_6_7,C_7_0,C_7_1,C_7_2,C_7_3,C_7_4,C_7_5,C_7_6,C_7_7,C_8_0,C_8_1,C_8_2,C_8_3,C_8_4,C_8_5,C_8_6,C_8_7,S_0_0,S_0_1,S_0_2,S_0_3,S_0_4,S_0_5,S_0_6,S_0_7,S_1_0,S_1_1,S_1_2,S_1_3,S_1_4,S_1_5,S_1_6,S_1_7,S_2_0,S_2_1,S_2_2,S_2_3,S_2_4,S_2_5,S_2_6,S_2_7,S_3_0,S_3_1,S_3_2,S_3_3,S_3_4,S_3_5,S_3_6,S_3_7,S_4_0,S_4_1,S_4_2,S_4_3,S_4_4,S_4_5,S_4_6,S_4_7,S_5_0,S_5_1,S_5_2,S_5_3,S_5_4,S_5_5,S_5_6,S_5_7,S_6_0,S_6_1,S_6_2,S_6_3,S_6_4,S_6_5,S_6_6,S_6_7,S_7_0,S_7_1,S_7_2,S_7_3,S_7_4,S_7_5,S_7_6,S_7_7,S_8_0,S_8_1,S_8_2,S_8_3,S_8_4,S_8_5,S_8_6,S_8_7;
  S_0_0 = (((A>>0)&1) & ((B>>0)&1));
  S_0_1 = (((A>>0)&1) & ((B>>1)&1));
  S_0_2 = (((A>>0)&1) & ((B>>2)&1));
  S_0_3 = (((A>>0)&1) & ((B>>3)&1));
  S_0_4 = (((A>>0)&1) & ((B>>4)&1));
  S_0_5 = (((A>>0)&1) & ((B>>5)&1));
  S_0_6 = (((A>>0)&1) & ((B>>6)&1));
  S_0_7 = (((((A>>0)&1) & ((B>>7)&1)))^1);
  S_1_0 = S_0_1^(((A>>1)&1) & ((B>>0)&1));
  C_1_0 = S_0_1&(((A>>1)&1) & ((B>>0)&1));
  S_1_1 = S_0_2^(((A>>1)&1) & ((B>>1)&1));
  C_1_1 = S_0_2&(((A>>1)&1) & ((B>>1)&1));
  S_1_2 = S_0_3^(((A>>1)&1) & ((B>>2)&1));
  C_1_2 = S_0_3&(((A>>1)&1) & ((B>>2)&1));
  S_1_3 = S_0_4^(((A>>1)&1) & ((B>>3)&1));
  C_1_3 = S_0_4&(((A>>1)&1) & ((B>>3)&1));
  S_1_4 = S_0_5^(((A>>1)&1) & ((B>>4)&1));
  C_1_4 = S_0_5&(((A>>1)&1) & ((B>>4)&1));
  S_1_5 = S_0_6^(((A>>1)&1) & ((B>>5)&1));
  C_1_5 = S_0_6&(((A>>1)&1) & ((B>>5)&1));
  S_1_6 = S_0_7^(((A>>1)&1) & ((B>>6)&1));
  C_1_6 = S_0_7&(((A>>1)&1) & ((B>>6)&1));
  S_1_7 = 1^(((((A>>1)&1) & ((B>>7)&1)))^1);
  C_1_7 = 1&(((((A>>1)&1) & ((B>>7)&1)))^1);
  tmp = S_1_1^C_1_0;
  S_2_0 = tmp^(((A>>2)&1) & ((B>>0)&1));
  C_2_0 = (tmp&(((A>>2)&1) & ((B>>0)&1)))|(S_1_1&C_1_0);
  tmp = S_1_2^C_1_1;
  S_2_1 = tmp^(((A>>2)&1) & ((B>>1)&1));
  C_2_1 = (tmp&(((A>>2)&1) & ((B>>1)&1)))|(S_1_2&C_1_1);
  tmp = S_1_3^C_1_2;
  S_2_2 = tmp^(((A>>2)&1) & ((B>>2)&1));
  C_2_2 = (tmp&(((A>>2)&1) & ((B>>2)&1)))|(S_1_3&C_1_2);
  tmp = S_1_4^C_1_3;
  S_2_3 = tmp^(((A>>2)&1) & ((B>>3)&1));
  C_2_3 = (tmp&(((A>>2)&1) & ((B>>3)&1)))|(S_1_4&C_1_3);
  tmp = S_1_5^C_1_4;
  S_2_4 = tmp^(((A>>2)&1) & ((B>>4)&1));
  C_2_4 = (tmp&(((A>>2)&1) & ((B>>4)&1)))|(S_1_5&C_1_4);
  tmp = S_1_6^C_1_5;
  S_2_5 = tmp^(((A>>2)&1) & ((B>>5)&1));
  C_2_5 = (tmp&(((A>>2)&1) & ((B>>5)&1)))|(S_1_6&C_1_5);
  tmp = S_1_7^C_1_6;
  S_2_6 = tmp^(((A>>2)&1) & ((B>>6)&1));
  C_2_6 = (tmp&(((A>>2)&1) & ((B>>6)&1)))|(S_1_7&C_1_6);
  S_2_7 = C_1_7^(((((A>>2)&1) & ((B>>7)&1)))^1);
  C_2_7 = C_1_7&(((((A>>2)&1) & ((B>>7)&1)))^1);
  tmp = S_2_1^C_2_0;
  S_3_0 = tmp^(((A>>3)&1) & ((B>>0)&1));
  C_3_0 = (tmp&(((A>>3)&1) & ((B>>0)&1)))|(S_2_1&C_2_0);
  tmp = S_2_2^C_2_1;
  S_3_1 = tmp^(((A>>3)&1) & ((B>>1)&1));
  C_3_1 = (tmp&(((A>>3)&1) & ((B>>1)&1)))|(S_2_2&C_2_1);
  tmp = S_2_3^C_2_2;
  S_3_2 = tmp^(((A>>3)&1) & ((B>>2)&1));
  C_3_2 = (tmp&(((A>>3)&1) & ((B>>2)&1)))|(S_2_3&C_2_2);
  tmp = S_2_4^C_2_3;
  S_3_3 = tmp^(((A>>3)&1) & ((B>>3)&1));
  C_3_3 = (tmp&(((A>>3)&1) & ((B>>3)&1)))|(S_2_4&C_2_3);
  tmp = S_2_5^C_2_4;
  S_3_4 = tmp^(((A>>3)&1) & ((B>>4)&1));
  C_3_4 = (tmp&(((A>>3)&1) & ((B>>4)&1)))|(S_2_5&C_2_4);
  tmp = S_2_6^C_2_5;
  S_3_5 = tmp^(((A>>3)&1) & ((B>>5)&1));
  C_3_5 = (tmp&(((A>>3)&1) & ((B>>5)&1)))|(S_2_6&C_2_5);
  tmp = S_2_7^C_2_6;
  S_3_6 = tmp^(((A>>3)&1) & ((B>>6)&1));
  C_3_6 = (tmp&(((A>>3)&1) & ((B>>6)&1)))|(S_2_7&C_2_6);
  S_3_7 = C_2_7^(((((A>>3)&1) & ((B>>7)&1)))^1);
  C_3_7 = C_2_7&(((((A>>3)&1) & ((B>>7)&1)))^1);
  tmp = S_3_1^C_3_0;
  S_4_0 = tmp^(((A>>4)&1) & ((B>>0)&1));
  C_4_0 = (tmp&(((A>>4)&1) & ((B>>0)&1)))|(S_3_1&C_3_0);
  tmp = S_3_2^C_3_1;
  S_4_1 = tmp^(((A>>4)&1) & ((B>>1)&1));
  C_4_1 = (tmp&(((A>>4)&1) & ((B>>1)&1)))|(S_3_2&C_3_1);
  tmp = S_3_3^C_3_2;
  S_4_2 = tmp^(((A>>4)&1) & ((B>>2)&1));
  C_4_2 = (tmp&(((A>>4)&1) & ((B>>2)&1)))|(S_3_3&C_3_2);
  tmp = S_3_4^C_3_3;
  S_4_3 = tmp^(((A>>4)&1) & ((B>>3)&1));
  C_4_3 = (tmp&(((A>>4)&1) & ((B>>3)&1)))|(S_3_4&C_3_3);
  tmp = S_3_5^C_3_4;
  S_4_4 = tmp^(((A>>4)&1) & ((B>>4)&1));
  C_4_4 = (tmp&(((A>>4)&1) & ((B>>4)&1)))|(S_3_5&C_3_4);
  tmp = S_3_6^C_3_5;
  S_4_5 = tmp^(((A>>4)&1) & ((B>>5)&1));
  C_4_5 = (tmp&(((A>>4)&1) & ((B>>5)&1)))|(S_3_6&C_3_5);
  tmp = S_3_7^C_3_6;
  S_4_6 = tmp^(((A>>4)&1) & ((B>>6)&1));
  C_4_6 = (tmp&(((A>>4)&1) & ((B>>6)&1)))|(S_3_7&C_3_6);
  S_4_7 = C_3_7^(((((A>>4)&1) & ((B>>7)&1)))^1);
  C_4_7 = C_3_7&(((((A>>4)&1) & ((B>>7)&1)))^1);
  tmp = S_4_1^C_4_0;
  S_5_0 = tmp^(((A>>5)&1) & ((B>>0)&1));
  C_5_0 = (tmp&(((A>>5)&1) & ((B>>0)&1)))|(S_4_1&C_4_0);
  tmp = S_4_2^C_4_1;
  S_5_1 = tmp^(((A>>5)&1) & ((B>>1)&1));
  C_5_1 = (tmp&(((A>>5)&1) & ((B>>1)&1)))|(S_4_2&C_4_1);
  tmp = S_4_3^C_4_2;
  S_5_2 = tmp^(((A>>5)&1) & ((B>>2)&1));
  C_5_2 = (tmp&(((A>>5)&1) & ((B>>2)&1)))|(S_4_3&C_4_2);
  tmp = S_4_4^C_4_3;
  S_5_3 = tmp^(((A>>5)&1) & ((B>>3)&1));
  C_5_3 = (tmp&(((A>>5)&1) & ((B>>3)&1)))|(S_4_4&C_4_3);
  tmp = S_4_5^C_4_4;
  S_5_4 = tmp^(((A>>5)&1) & ((B>>4)&1));
  C_5_4 = (tmp&(((A>>5)&1) & ((B>>4)&1)))|(S_4_5&C_4_4);
  tmp = S_4_6^C_4_5;
  S_5_5 = tmp^(((A>>5)&1) & ((B>>5)&1));
  C_5_5 = (tmp&(((A>>5)&1) & ((B>>5)&1)))|(S_4_6&C_4_5);
  tmp = S_4_7^C_4_6;
  S_5_6 = tmp^(((A>>5)&1) & ((B>>6)&1));
  C_5_6 = (tmp&(((A>>5)&1) & ((B>>6)&1)))|(S_4_7&C_4_6);
  S_5_7 = C_4_7^(((((A>>5)&1) & ((B>>7)&1)))^1);
  C_5_7 = C_4_7&(((((A>>5)&1) & ((B>>7)&1)))^1);
  tmp = S_5_1^C_5_0;
  S_6_0 = tmp^(((A>>6)&1) & ((B>>0)&1));
  C_6_0 = (tmp&(((A>>6)&1) & ((B>>0)&1)))|(S_5_1&C_5_0);
  tmp = S_5_2^C_5_1;
  S_6_1 = tmp^(((A>>6)&1) & ((B>>1)&1));
  C_6_1 = (tmp&(((A>>6)&1) & ((B>>1)&1)))|(S_5_2&C_5_1);
  tmp = S_5_3^C_5_2;
  S_6_2 = tmp^(((A>>6)&1) & ((B>>2)&1));
  C_6_2 = (tmp&(((A>>6)&1) & ((B>>2)&1)))|(S_5_3&C_5_2);
  tmp = S_5_4^C_5_3;
  S_6_3 = tmp^(((A>>6)&1) & ((B>>3)&1));
  C_6_3 = (tmp&(((A>>6)&1) & ((B>>3)&1)))|(S_5_4&C_5_3);
  tmp = S_5_5^C_5_4;
  S_6_4 = tmp^(((A>>6)&1) & ((B>>4)&1));
  C_6_4 = (tmp&(((A>>6)&1) & ((B>>4)&1)))|(S_5_5&C_5_4);
  tmp = S_5_6^C_5_5;
  S_6_5 = tmp^(((A>>6)&1) & ((B>>5)&1));
  C_6_5 = (tmp&(((A>>6)&1) & ((B>>5)&1)))|(S_5_6&C_5_5);
  tmp = S_5_7^C_5_6;
  S_6_6 = tmp^(((A>>6)&1) & ((B>>6)&1));
  C_6_6 = (tmp&(((A>>6)&1) & ((B>>6)&1)))|(S_5_7&C_5_6);
  S_6_7 = C_5_7^(((((A>>6)&1) & ((B>>7)&1)))^1);
  C_6_7 = C_5_7&(((((A>>6)&1) & ((B>>7)&1)))^1);
  tmp = S_6_1^C_6_0;
  S_7_0 = tmp^(((((A>>7)&1) & ((B>>0)&1)))^1);
  C_7_0 = (tmp&(((((A>>7)&1) & ((B>>0)&1)))^1))|(S_6_1&C_6_0);
  tmp = S_6_2^C_6_1;
  S_7_1 = tmp^(((((A>>7)&1) & ((B>>1)&1)))^1);
  C_7_1 = (tmp&(((((A>>7)&1) & ((B>>1)&1)))^1))|(S_6_2&C_6_1);
  tmp = S_6_3^C_6_2;
  S_7_2 = tmp^(((((A>>7)&1) & ((B>>2)&1)))^1);
  C_7_2 = (tmp&(((((A>>7)&1) & ((B>>2)&1)))^1))|(S_6_3&C_6_2);
  tmp = S_6_4^C_6_3;
  S_7_3 = tmp^(((((A>>7)&1) & ((B>>3)&1)))^1);
  C_7_3 = (tmp&(((((A>>7)&1) & ((B>>3)&1)))^1))|(S_6_4&C_6_3);
  tmp = S_6_5^C_6_4;
  S_7_4 = tmp^(((((A>>7)&1) & ((B>>4)&1)))^1);
  C_7_4 = (tmp&(((((A>>7)&1) & ((B>>4)&1)))^1))|(S_6_5&C_6_4);
  tmp = S_6_6^C_6_5;
  S_7_5 = tmp^(((((A>>7)&1) & ((B>>5)&1)))^1);
  C_7_5 = (tmp&(((((A>>7)&1) & ((B>>5)&1)))^1))|(S_6_6&C_6_5);
  tmp = S_6_7^C_6_6;
  S_7_6 = tmp^(((((A>>7)&1) & ((B>>6)&1)))^1);
  C_7_6 = (tmp&(((((A>>7)&1) & ((B>>6)&1)))^1))|(S_6_7&C_6_6);
  S_7_7 = C_6_7^(((A>>7)&1) & ((B>>7)&1));
  C_7_7 = C_6_7&(((A>>7)&1) & ((B>>7)&1));
  S_8_0 = S_7_1^C_7_0;
  C_8_0 = S_7_1&C_7_0;
  tmp = S_7_2^C_8_0;
  S_8_1 = tmp^C_7_1;
  C_8_1 = (tmp&C_7_1)|(S_7_2&C_8_0);
  tmp = S_7_3^C_8_1;
  S_8_2 = tmp^C_7_2;
  C_8_2 = (tmp&C_7_2)|(S_7_3&C_8_1);
  tmp = S_7_4^C_8_2;
  S_8_3 = tmp^C_7_3;
  C_8_3 = (tmp&C_7_3)|(S_7_4&C_8_2);
  tmp = S_7_5^C_8_3;
  S_8_4 = tmp^C_7_4;
  C_8_4 = (tmp&C_7_4)|(S_7_5&C_8_3);
  tmp = S_7_6^C_8_4;
  S_8_5 = tmp^C_7_5;
  C_8_5 = (tmp&C_7_5)|(S_7_6&C_8_4);
  tmp = S_7_7^C_8_5;
  S_8_6 = tmp^C_7_6;
  C_8_6 = (tmp&C_7_6)|(S_7_7&C_8_5);
  tmp = 1^C_8_6;
  S_8_7 = tmp^C_7_7;
  C_8_7 = (tmp&C_7_7)|(1&C_8_6);
  P = 0;
  P |= (S_0_0 & 1) << 0;
  P |= (S_1_0 & 1) << 1;
  P |= (S_2_0 & 1) << 2;
  P |= (S_3_0 & 1) << 3;
  P |= (S_4_0 & 1) << 4;
  P |= (S_5_0 & 1) << 5;
  P |= (S_6_0 & 1) << 6;
  P |= (S_7_0 & 1) << 7;
  P |= (S_8_0 & 1) << 8;
  P |= (S_8_1 & 1) << 9;
  P |= (S_8_2 & 1) << 10;
  P |= (S_8_3 & 1) << 11;
  P |= (S_8_4 & 1) << 12;
  P |= (S_8_5 & 1) << 13;
  P |= (S_8_6 & 1) << 14;
  P |= (S_8_7 & 1) << 15;
  return P;
}

__device__ int16_t mul8s_1KV8(int8_t A, int8_t B)
{
  int16_t P, P_;
  uint8_t tmp, C_1_1,C_1_2,C_1_3,C_1_4,C_1_5,C_1_6,C_1_7,C_2_0,C_2_1,C_2_2,C_2_3,C_2_4,C_2_5,C_2_6,C_2_7,C_3_0,C_3_1,C_3_2,C_3_3,C_3_4,C_3_5,C_3_6,C_3_7,C_4_0,C_4_1,C_4_2,C_4_3,C_4_4,C_4_5,C_4_6,C_4_7,C_5_0,C_5_1,C_5_2,C_5_3,C_5_4,C_5_5,C_5_6,C_5_7,C_6_0,C_6_1,C_6_2,C_6_3,C_6_4,C_6_5,C_6_6,C_6_7,C_7_0,C_7_1,C_7_2,C_7_3,C_7_4,C_7_5,C_7_6,C_7_7,C_8_0,C_8_1,C_8_2,C_8_3,C_8_4,C_8_5,C_8_6,C_8_7,S_0_2,S_0_3,S_0_4,S_0_5,S_0_6,S_0_7,S_1_1,S_1_2,S_1_3,S_1_4,S_1_5,S_1_6,S_1_7,S_2_0,S_2_1,S_2_2,S_2_3,S_2_4,S_2_5,S_2_6,S_2_7,S_3_0,S_3_1,S_3_2,S_3_3,S_3_4,S_3_5,S_3_6,S_3_7,S_4_0,S_4_1,S_4_2,S_4_3,S_4_4,S_4_5,S_4_6,S_4_7,S_5_0,S_5_1,S_5_2,S_5_3,S_5_4,S_5_5,S_5_6,S_5_7,S_6_0,S_6_1,S_6_2,S_6_3,S_6_4,S_6_5,S_6_6,S_6_7,S_7_0,S_7_1,S_7_2,S_7_3,S_7_4,S_7_5,S_7_6,S_7_7,S_8_0,S_8_1,S_8_2,S_8_3,S_8_4,S_8_5,S_8_6,S_8_7;
  S_0_2 = (((A>>0)&1) & ((B>>2)&1));
  S_0_3 = (((A>>0)&1) & ((B>>3)&1));
  S_0_4 = (((A>>0)&1) & ((B>>4)&1));
  S_0_5 = (((A>>0)&1) & ((B>>5)&1));
  S_0_6 = (((A>>0)&1) & ((B>>6)&1));
  S_0_7 = (((((A>>0)&1) & ((B>>7)&1)))^1);
  S_1_1 = S_0_2^(((A>>1)&1) & ((B>>1)&1));
  C_1_1 = S_0_2&(((A>>1)&1) & ((B>>1)&1));
  S_1_2 = S_0_3^(((A>>1)&1) & ((B>>2)&1));
  C_1_2 = S_0_3&(((A>>1)&1) & ((B>>2)&1));
  S_1_3 = S_0_4^(((A>>1)&1) & ((B>>3)&1));
  C_1_3 = S_0_4&(((A>>1)&1) & ((B>>3)&1));
  S_1_4 = S_0_5^(((A>>1)&1) & ((B>>4)&1));
  C_1_4 = S_0_5&(((A>>1)&1) & ((B>>4)&1));
  S_1_5 = S_0_6^(((A>>1)&1) & ((B>>5)&1));
  C_1_5 = S_0_6&(((A>>1)&1) & ((B>>5)&1));
  S_1_6 = S_0_7^(((A>>1)&1) & ((B>>6)&1));
  C_1_6 = S_0_7&(((A>>1)&1) & ((B>>6)&1));
  S_1_7 = 1^(((((A>>1)&1) & ((B>>7)&1)))^1);
  C_1_7 = 1&(((((A>>1)&1) & ((B>>7)&1)))^1);
  S_2_0 = S_1_1^(((A>>2)&1) & ((B>>0)&1));
  C_2_0 = S_1_1&(((A>>2)&1) & ((B>>0)&1));
  tmp = S_1_2^C_1_1;
  S_2_1 = tmp^(((A>>2)&1) & ((B>>1)&1));
  C_2_1 = (tmp&(((A>>2)&1) & ((B>>1)&1)))|(S_1_2&C_1_1);
  tmp = S_1_3^C_1_2;
  S_2_2 = tmp^(((A>>2)&1) & ((B>>2)&1));
  C_2_2 = (tmp&(((A>>2)&1) & ((B>>2)&1)))|(S_1_3&C_1_2);
  tmp = S_1_4^C_1_3;
  S_2_3 = tmp^(((A>>2)&1) & ((B>>3)&1));
  C_2_3 = (tmp&(((A>>2)&1) & ((B>>3)&1)))|(S_1_4&C_1_3);
  tmp = S_1_5^C_1_4;
  S_2_4 = tmp^(((A>>2)&1) & ((B>>4)&1));
  C_2_4 = (tmp&(((A>>2)&1) & ((B>>4)&1)))|(S_1_5&C_1_4);
  tmp = S_1_6^C_1_5;
  S_2_5 = tmp^(((A>>2)&1) & ((B>>5)&1));
  C_2_5 = (tmp&(((A>>2)&1) & ((B>>5)&1)))|(S_1_6&C_1_5);
  tmp = S_1_7^C_1_6;
  S_2_6 = tmp^(((A>>2)&1) & ((B>>6)&1));
  C_2_6 = (tmp&(((A>>2)&1) & ((B>>6)&1)))|(S_1_7&C_1_6);
  S_2_7 = C_1_7^(((((A>>2)&1) & ((B>>7)&1)))^1);
  C_2_7 = C_1_7&(((((A>>2)&1) & ((B>>7)&1)))^1);
  tmp = S_2_1^C_2_0;
  S_3_0 = tmp^(((A>>3)&1) & ((B>>0)&1));
  C_3_0 = (tmp&(((A>>3)&1) & ((B>>0)&1)))|(S_2_1&C_2_0);
  tmp = S_2_2^C_2_1;
  S_3_1 = tmp^(((A>>3)&1) & ((B>>1)&1));
  C_3_1 = (tmp&(((A>>3)&1) & ((B>>1)&1)))|(S_2_2&C_2_1);
  tmp = S_2_3^C_2_2;
  S_3_2 = tmp^(((A>>3)&1) & ((B>>2)&1));
  C_3_2 = (tmp&(((A>>3)&1) & ((B>>2)&1)))|(S_2_3&C_2_2);
  tmp = S_2_4^C_2_3;
  S_3_3 = tmp^(((A>>3)&1) & ((B>>3)&1));
  C_3_3 = (tmp&(((A>>3)&1) & ((B>>3)&1)))|(S_2_4&C_2_3);
  tmp = S_2_5^C_2_4;
  S_3_4 = tmp^(((A>>3)&1) & ((B>>4)&1));
  C_3_4 = (tmp&(((A>>3)&1) & ((B>>4)&1)))|(S_2_5&C_2_4);
  tmp = S_2_6^C_2_5;
  S_3_5 = tmp^(((A>>3)&1) & ((B>>5)&1));
  C_3_5 = (tmp&(((A>>3)&1) & ((B>>5)&1)))|(S_2_6&C_2_5);
  tmp = S_2_7^C_2_6;
  S_3_6 = tmp^(((A>>3)&1) & ((B>>6)&1));
  C_3_6 = (tmp&(((A>>3)&1) & ((B>>6)&1)))|(S_2_7&C_2_6);
  S_3_7 = C_2_7^(((((A>>3)&1) & ((B>>7)&1)))^1);
  C_3_7 = C_2_7&(((((A>>3)&1) & ((B>>7)&1)))^1);
  tmp = S_3_1^C_3_0;
  S_4_0 = tmp^(((A>>4)&1) & ((B>>0)&1));
  C_4_0 = (tmp&(((A>>4)&1) & ((B>>0)&1)))|(S_3_1&C_3_0);
  tmp = S_3_2^C_3_1;
  S_4_1 = tmp^(((A>>4)&1) & ((B>>1)&1));
  C_4_1 = (tmp&(((A>>4)&1) & ((B>>1)&1)))|(S_3_2&C_3_1);
  tmp = S_3_3^C_3_2;
  S_4_2 = tmp^(((A>>4)&1) & ((B>>2)&1));
  C_4_2 = (tmp&(((A>>4)&1) & ((B>>2)&1)))|(S_3_3&C_3_2);
  tmp = S_3_4^C_3_3;
  S_4_3 = tmp^(((A>>4)&1) & ((B>>3)&1));
  C_4_3 = (tmp&(((A>>4)&1) & ((B>>3)&1)))|(S_3_4&C_3_3);
  tmp = S_3_5^C_3_4;
  S_4_4 = tmp^(((A>>4)&1) & ((B>>4)&1));
  C_4_4 = (tmp&(((A>>4)&1) & ((B>>4)&1)))|(S_3_5&C_3_4);
  tmp = S_3_6^C_3_5;
  S_4_5 = tmp^(((A>>4)&1) & ((B>>5)&1));
  C_4_5 = (tmp&(((A>>4)&1) & ((B>>5)&1)))|(S_3_6&C_3_5);
  tmp = S_3_7^C_3_6;
  S_4_6 = tmp^(((A>>4)&1) & ((B>>6)&1));
  C_4_6 = (tmp&(((A>>4)&1) & ((B>>6)&1)))|(S_3_7&C_3_6);
  S_4_7 = C_3_7^(((((A>>4)&1) & ((B>>7)&1)))^1);
  C_4_7 = C_3_7&(((((A>>4)&1) & ((B>>7)&1)))^1);
  tmp = S_4_1^C_4_0;
  S_5_0 = tmp^(((A>>5)&1) & ((B>>0)&1));
  C_5_0 = (tmp&(((A>>5)&1) & ((B>>0)&1)))|(S_4_1&C_4_0);
  tmp = S_4_2^C_4_1;
  S_5_1 = tmp^(((A>>5)&1) & ((B>>1)&1));
  C_5_1 = (tmp&(((A>>5)&1) & ((B>>1)&1)))|(S_4_2&C_4_1);
  tmp = S_4_3^C_4_2;
  S_5_2 = tmp^(((A>>5)&1) & ((B>>2)&1));
  C_5_2 = (tmp&(((A>>5)&1) & ((B>>2)&1)))|(S_4_3&C_4_2);
  tmp = S_4_4^C_4_3;
  S_5_3 = tmp^(((A>>5)&1) & ((B>>3)&1));
  C_5_3 = (tmp&(((A>>5)&1) & ((B>>3)&1)))|(S_4_4&C_4_3);
  tmp = S_4_5^C_4_4;
  S_5_4 = tmp^(((A>>5)&1) & ((B>>4)&1));
  C_5_4 = (tmp&(((A>>5)&1) & ((B>>4)&1)))|(S_4_5&C_4_4);
  tmp = S_4_6^C_4_5;
  S_5_5 = tmp^(((A>>5)&1) & ((B>>5)&1));
  C_5_5 = (tmp&(((A>>5)&1) & ((B>>5)&1)))|(S_4_6&C_4_5);
  tmp = S_4_7^C_4_6;
  S_5_6 = tmp^(((A>>5)&1) & ((B>>6)&1));
  C_5_6 = (tmp&(((A>>5)&1) & ((B>>6)&1)))|(S_4_7&C_4_6);
  S_5_7 = C_4_7^(((((A>>5)&1) & ((B>>7)&1)))^1);
  C_5_7 = C_4_7&(((((A>>5)&1) & ((B>>7)&1)))^1);
  tmp = S_5_1^C_5_0;
  S_6_0 = tmp^(((A>>6)&1) & ((B>>0)&1));
  C_6_0 = (tmp&(((A>>6)&1) & ((B>>0)&1)))|(S_5_1&C_5_0);
  tmp = S_5_2^C_5_1;
  S_6_1 = tmp^(((A>>6)&1) & ((B>>1)&1));
  C_6_1 = (tmp&(((A>>6)&1) & ((B>>1)&1)))|(S_5_2&C_5_1);
  tmp = S_5_3^C_5_2;
  S_6_2 = tmp^(((A>>6)&1) & ((B>>2)&1));
  C_6_2 = (tmp&(((A>>6)&1) & ((B>>2)&1)))|(S_5_3&C_5_2);
  tmp = S_5_4^C_5_3;
  S_6_3 = tmp^(((A>>6)&1) & ((B>>3)&1));
  C_6_3 = (tmp&(((A>>6)&1) & ((B>>3)&1)))|(S_5_4&C_5_3);
  tmp = S_5_5^C_5_4;
  S_6_4 = tmp^(((A>>6)&1) & ((B>>4)&1));
  C_6_4 = (tmp&(((A>>6)&1) & ((B>>4)&1)))|(S_5_5&C_5_4);
  tmp = S_5_6^C_5_5;
  S_6_5 = tmp^(((A>>6)&1) & ((B>>5)&1));
  C_6_5 = (tmp&(((A>>6)&1) & ((B>>5)&1)))|(S_5_6&C_5_5);
  tmp = S_5_7^C_5_6;
  S_6_6 = tmp^(((A>>6)&1) & ((B>>6)&1));
  C_6_6 = (tmp&(((A>>6)&1) & ((B>>6)&1)))|(S_5_7&C_5_6);
  S_6_7 = C_5_7^(((((A>>6)&1) & ((B>>7)&1)))^1);
  C_6_7 = C_5_7&(((((A>>6)&1) & ((B>>7)&1)))^1);
  tmp = S_6_1^C_6_0;
  S_7_0 = tmp^(((((A>>7)&1) & ((B>>0)&1)))^1);
  C_7_0 = (tmp&(((((A>>7)&1) & ((B>>0)&1)))^1))|(S_6_1&C_6_0);
  tmp = S_6_2^C_6_1;
  S_7_1 = tmp^(((((A>>7)&1) & ((B>>1)&1)))^1);
  C_7_1 = (tmp&(((((A>>7)&1) & ((B>>1)&1)))^1))|(S_6_2&C_6_1);
  tmp = S_6_3^C_6_2;
  S_7_2 = tmp^(((((A>>7)&1) & ((B>>2)&1)))^1);
  C_7_2 = (tmp&(((((A>>7)&1) & ((B>>2)&1)))^1))|(S_6_3&C_6_2);
  tmp = S_6_4^C_6_3;
  S_7_3 = tmp^(((((A>>7)&1) & ((B>>3)&1)))^1);
  C_7_3 = (tmp&(((((A>>7)&1) & ((B>>3)&1)))^1))|(S_6_4&C_6_3);
  tmp = S_6_5^C_6_4;
  S_7_4 = tmp^(((((A>>7)&1) & ((B>>4)&1)))^1);
  C_7_4 = (tmp&(((((A>>7)&1) & ((B>>4)&1)))^1))|(S_6_5&C_6_4);
  tmp = S_6_6^C_6_5;
  S_7_5 = tmp^(((((A>>7)&1) & ((B>>5)&1)))^1);
  C_7_5 = (tmp&(((((A>>7)&1) & ((B>>5)&1)))^1))|(S_6_6&C_6_5);
  tmp = S_6_7^C_6_6;
  S_7_6 = tmp^(((((A>>7)&1) & ((B>>6)&1)))^1);
  C_7_6 = (tmp&(((((A>>7)&1) & ((B>>6)&1)))^1))|(S_6_7&C_6_6);
  S_7_7 = C_6_7^(((A>>7)&1) & ((B>>7)&1));
  C_7_7 = C_6_7&(((A>>7)&1) & ((B>>7)&1));
  S_8_0 = S_7_1^C_7_0;
  C_8_0 = S_7_1&C_7_0;
  tmp = S_7_2^C_8_0;
  S_8_1 = tmp^C_7_1;
  C_8_1 = (tmp&C_7_1)|(S_7_2&C_8_0);
  tmp = S_7_3^C_8_1;
  S_8_2 = tmp^C_7_2;
  C_8_2 = (tmp&C_7_2)|(S_7_3&C_8_1);
  tmp = S_7_4^C_8_2;
  S_8_3 = tmp^C_7_3;
  C_8_3 = (tmp&C_7_3)|(S_7_4&C_8_2);
  tmp = S_7_5^C_8_3;
  S_8_4 = tmp^C_7_4;
  C_8_4 = (tmp&C_7_4)|(S_7_5&C_8_3);
  tmp = S_7_6^C_8_4;
  S_8_5 = tmp^C_7_5;
  C_8_5 = (tmp&C_7_5)|(S_7_6&C_8_4);
  tmp = S_7_7^C_8_5;
  S_8_6 = tmp^C_7_6;
  C_8_6 = (tmp&C_7_6)|(S_7_7&C_8_5);
  tmp = 1^C_8_6;
  S_8_7 = tmp^C_7_7;
  C_8_7 = (tmp&C_7_7)|(1&C_8_6);
  P = 0;
  P |= (S_2_0 & 1) << 2;
  P |= (S_3_0 & 1) << 3;
  P |= (S_4_0 & 1) << 4;
  P |= (S_5_0 & 1) << 5;
  P |= (S_6_0 & 1) << 6;
  P |= (S_7_0 & 1) << 7;
  P |= (S_8_0 & 1) << 8;
  P |= (S_8_1 & 1) << 9;
  P |= (S_8_2 & 1) << 10;
  P |= (S_8_3 & 1) << 11;
  P |= (S_8_4 & 1) << 12;
  P |= (S_8_5 & 1) << 13;
  P |= (S_8_6 & 1) << 14;
  P |= (S_8_7 & 1) << 15;
  return P;
}

__device__ int16_t mul8s_1KV9(int8_t A, int8_t B)
{
  int16_t P, P_;
  uint8_t tmp, C_1_2,C_1_3,C_1_4,C_1_5,C_1_6,C_1_7,C_2_1,C_2_2,C_2_3,C_2_4,C_2_5,C_2_6,C_2_7,C_3_0,C_3_1,C_3_2,C_3_3,C_3_4,C_3_5,C_3_6,C_3_7,C_4_0,C_4_1,C_4_2,C_4_3,C_4_4,C_4_5,C_4_6,C_4_7,C_5_0,C_5_1,C_5_2,C_5_3,C_5_4,C_5_5,C_5_6,C_5_7,C_6_0,C_6_1,C_6_2,C_6_3,C_6_4,C_6_5,C_6_6,C_6_7,C_7_0,C_7_1,C_7_2,C_7_3,C_7_4,C_7_5,C_7_6,C_7_7,C_8_0,C_8_1,C_8_2,C_8_3,C_8_4,C_8_5,C_8_6,C_8_7,S_0_3,S_0_4,S_0_5,S_0_6,S_0_7,S_1_2,S_1_3,S_1_4,S_1_5,S_1_6,S_1_7,S_2_1,S_2_2,S_2_3,S_2_4,S_2_5,S_2_6,S_2_7,S_3_0,S_3_1,S_3_2,S_3_3,S_3_4,S_3_5,S_3_6,S_3_7,S_4_0,S_4_1,S_4_2,S_4_3,S_4_4,S_4_5,S_4_6,S_4_7,S_5_0,S_5_1,S_5_2,S_5_3,S_5_4,S_5_5,S_5_6,S_5_7,S_6_0,S_6_1,S_6_2,S_6_3,S_6_4,S_6_5,S_6_6,S_6_7,S_7_0,S_7_1,S_7_2,S_7_3,S_7_4,S_7_5,S_7_6,S_7_7,S_8_0,S_8_1,S_8_2,S_8_3,S_8_4,S_8_5,S_8_6,S_8_7;
  S_0_3 = (((A>>0)&1) & ((B>>3)&1));
  S_0_4 = (((A>>0)&1) & ((B>>4)&1));
  S_0_5 = (((A>>0)&1) & ((B>>5)&1));
  S_0_6 = (((A>>0)&1) & ((B>>6)&1));
  S_0_7 = (((((A>>0)&1) & ((B>>7)&1)))^1);
  S_1_2 = S_0_3^(((A>>1)&1) & ((B>>2)&1));
  C_1_2 = S_0_3&(((A>>1)&1) & ((B>>2)&1));
  S_1_3 = S_0_4^(((A>>1)&1) & ((B>>3)&1));
  C_1_3 = S_0_4&(((A>>1)&1) & ((B>>3)&1));
  S_1_4 = S_0_5^(((A>>1)&1) & ((B>>4)&1));
  C_1_4 = S_0_5&(((A>>1)&1) & ((B>>4)&1));
  S_1_5 = S_0_6^(((A>>1)&1) & ((B>>5)&1));
  C_1_5 = S_0_6&(((A>>1)&1) & ((B>>5)&1));
  S_1_6 = S_0_7^(((A>>1)&1) & ((B>>6)&1));
  C_1_6 = S_0_7&(((A>>1)&1) & ((B>>6)&1));
  S_1_7 = 1^(((((A>>1)&1) & ((B>>7)&1)))^1);
  C_1_7 = 1&(((((A>>1)&1) & ((B>>7)&1)))^1);
  S_2_1 = S_1_2^(((A>>2)&1) & ((B>>1)&1));
  C_2_1 = S_1_2&(((A>>2)&1) & ((B>>1)&1));
  tmp = S_1_3^C_1_2;
  S_2_2 = tmp^(((A>>2)&1) & ((B>>2)&1));
  C_2_2 = (tmp&(((A>>2)&1) & ((B>>2)&1)))|(S_1_3&C_1_2);
  tmp = S_1_4^C_1_3;
  S_2_3 = tmp^(((A>>2)&1) & ((B>>3)&1));
  C_2_3 = (tmp&(((A>>2)&1) & ((B>>3)&1)))|(S_1_4&C_1_3);
  tmp = S_1_5^C_1_4;
  S_2_4 = tmp^(((A>>2)&1) & ((B>>4)&1));
  C_2_4 = (tmp&(((A>>2)&1) & ((B>>4)&1)))|(S_1_5&C_1_4);
  tmp = S_1_6^C_1_5;
  S_2_5 = tmp^(((A>>2)&1) & ((B>>5)&1));
  C_2_5 = (tmp&(((A>>2)&1) & ((B>>5)&1)))|(S_1_6&C_1_5);
  tmp = S_1_7^C_1_6;
  S_2_6 = tmp^(((A>>2)&1) & ((B>>6)&1));
  C_2_6 = (tmp&(((A>>2)&1) & ((B>>6)&1)))|(S_1_7&C_1_6);
  S_2_7 = C_1_7^(((((A>>2)&1) & ((B>>7)&1)))^1);
  C_2_7 = C_1_7&(((((A>>2)&1) & ((B>>7)&1)))^1);
  S_3_0 = S_2_1^(((A>>3)&1) & ((B>>0)&1));
  C_3_0 = S_2_1&(((A>>3)&1) & ((B>>0)&1));
  tmp = S_2_2^C_2_1;
  S_3_1 = tmp^(((A>>3)&1) & ((B>>1)&1));
  C_3_1 = (tmp&(((A>>3)&1) & ((B>>1)&1)))|(S_2_2&C_2_1);
  tmp = S_2_3^C_2_2;
  S_3_2 = tmp^(((A>>3)&1) & ((B>>2)&1));
  C_3_2 = (tmp&(((A>>3)&1) & ((B>>2)&1)))|(S_2_3&C_2_2);
  tmp = S_2_4^C_2_3;
  S_3_3 = tmp^(((A>>3)&1) & ((B>>3)&1));
  C_3_3 = (tmp&(((A>>3)&1) & ((B>>3)&1)))|(S_2_4&C_2_3);
  tmp = S_2_5^C_2_4;
  S_3_4 = tmp^(((A>>3)&1) & ((B>>4)&1));
  C_3_4 = (tmp&(((A>>3)&1) & ((B>>4)&1)))|(S_2_5&C_2_4);
  tmp = S_2_6^C_2_5;
  S_3_5 = tmp^(((A>>3)&1) & ((B>>5)&1));
  C_3_5 = (tmp&(((A>>3)&1) & ((B>>5)&1)))|(S_2_6&C_2_5);
  tmp = S_2_7^C_2_6;
  S_3_6 = tmp^(((A>>3)&1) & ((B>>6)&1));
  C_3_6 = (tmp&(((A>>3)&1) & ((B>>6)&1)))|(S_2_7&C_2_6);
  S_3_7 = C_2_7^(((((A>>3)&1) & ((B>>7)&1)))^1);
  C_3_7 = C_2_7&(((((A>>3)&1) & ((B>>7)&1)))^1);
  tmp = S_3_1^C_3_0;
  S_4_0 = tmp^(((A>>4)&1) & ((B>>0)&1));
  C_4_0 = (tmp&(((A>>4)&1) & ((B>>0)&1)))|(S_3_1&C_3_0);
  tmp = S_3_2^C_3_1;
  S_4_1 = tmp^(((A>>4)&1) & ((B>>1)&1));
  C_4_1 = (tmp&(((A>>4)&1) & ((B>>1)&1)))|(S_3_2&C_3_1);
  tmp = S_3_3^C_3_2;
  S_4_2 = tmp^(((A>>4)&1) & ((B>>2)&1));
  C_4_2 = (tmp&(((A>>4)&1) & ((B>>2)&1)))|(S_3_3&C_3_2);
  tmp = S_3_4^C_3_3;
  S_4_3 = tmp^(((A>>4)&1) & ((B>>3)&1));
  C_4_3 = (tmp&(((A>>4)&1) & ((B>>3)&1)))|(S_3_4&C_3_3);
  tmp = S_3_5^C_3_4;
  S_4_4 = tmp^(((A>>4)&1) & ((B>>4)&1));
  C_4_4 = (tmp&(((A>>4)&1) & ((B>>4)&1)))|(S_3_5&C_3_4);
  tmp = S_3_6^C_3_5;
  S_4_5 = tmp^(((A>>4)&1) & ((B>>5)&1));
  C_4_5 = (tmp&(((A>>4)&1) & ((B>>5)&1)))|(S_3_6&C_3_5);
  tmp = S_3_7^C_3_6;
  S_4_6 = tmp^(((A>>4)&1) & ((B>>6)&1));
  C_4_6 = (tmp&(((A>>4)&1) & ((B>>6)&1)))|(S_3_7&C_3_6);
  S_4_7 = C_3_7^(((((A>>4)&1) & ((B>>7)&1)))^1);
  C_4_7 = C_3_7&(((((A>>4)&1) & ((B>>7)&1)))^1);
  tmp = S_4_1^C_4_0;
  S_5_0 = tmp^(((A>>5)&1) & ((B>>0)&1));
  C_5_0 = (tmp&(((A>>5)&1) & ((B>>0)&1)))|(S_4_1&C_4_0);
  tmp = S_4_2^C_4_1;
  S_5_1 = tmp^(((A>>5)&1) & ((B>>1)&1));
  C_5_1 = (tmp&(((A>>5)&1) & ((B>>1)&1)))|(S_4_2&C_4_1);
  tmp = S_4_3^C_4_2;
  S_5_2 = tmp^(((A>>5)&1) & ((B>>2)&1));
  C_5_2 = (tmp&(((A>>5)&1) & ((B>>2)&1)))|(S_4_3&C_4_2);
  tmp = S_4_4^C_4_3;
  S_5_3 = tmp^(((A>>5)&1) & ((B>>3)&1));
  C_5_3 = (tmp&(((A>>5)&1) & ((B>>3)&1)))|(S_4_4&C_4_3);
  tmp = S_4_5^C_4_4;
  S_5_4 = tmp^(((A>>5)&1) & ((B>>4)&1));
  C_5_4 = (tmp&(((A>>5)&1) & ((B>>4)&1)))|(S_4_5&C_4_4);
  tmp = S_4_6^C_4_5;
  S_5_5 = tmp^(((A>>5)&1) & ((B>>5)&1));
  C_5_5 = (tmp&(((A>>5)&1) & ((B>>5)&1)))|(S_4_6&C_4_5);
  tmp = S_4_7^C_4_6;
  S_5_6 = tmp^(((A>>5)&1) & ((B>>6)&1));
  C_5_6 = (tmp&(((A>>5)&1) & ((B>>6)&1)))|(S_4_7&C_4_6);
  S_5_7 = C_4_7^(((((A>>5)&1) & ((B>>7)&1)))^1);
  C_5_7 = C_4_7&(((((A>>5)&1) & ((B>>7)&1)))^1);
  tmp = S_5_1^C_5_0;
  S_6_0 = tmp^(((A>>6)&1) & ((B>>0)&1));
  C_6_0 = (tmp&(((A>>6)&1) & ((B>>0)&1)))|(S_5_1&C_5_0);
  tmp = S_5_2^C_5_1;
  S_6_1 = tmp^(((A>>6)&1) & ((B>>1)&1));
  C_6_1 = (tmp&(((A>>6)&1) & ((B>>1)&1)))|(S_5_2&C_5_1);
  tmp = S_5_3^C_5_2;
  S_6_2 = tmp^(((A>>6)&1) & ((B>>2)&1));
  C_6_2 = (tmp&(((A>>6)&1) & ((B>>2)&1)))|(S_5_3&C_5_2);
  tmp = S_5_4^C_5_3;
  S_6_3 = tmp^(((A>>6)&1) & ((B>>3)&1));
  C_6_3 = (tmp&(((A>>6)&1) & ((B>>3)&1)))|(S_5_4&C_5_3);
  tmp = S_5_5^C_5_4;
  S_6_4 = tmp^(((A>>6)&1) & ((B>>4)&1));
  C_6_4 = (tmp&(((A>>6)&1) & ((B>>4)&1)))|(S_5_5&C_5_4);
  tmp = S_5_6^C_5_5;
  S_6_5 = tmp^(((A>>6)&1) & ((B>>5)&1));
  C_6_5 = (tmp&(((A>>6)&1) & ((B>>5)&1)))|(S_5_6&C_5_5);
  tmp = S_5_7^C_5_6;
  S_6_6 = tmp^(((A>>6)&1) & ((B>>6)&1));
  C_6_6 = (tmp&(((A>>6)&1) & ((B>>6)&1)))|(S_5_7&C_5_6);
  S_6_7 = C_5_7^(((((A>>6)&1) & ((B>>7)&1)))^1);
  C_6_7 = C_5_7&(((((A>>6)&1) & ((B>>7)&1)))^1);
  tmp = S_6_1^C_6_0;
  S_7_0 = tmp^(((((A>>7)&1) & ((B>>0)&1)))^1);
  C_7_0 = (tmp&(((((A>>7)&1) & ((B>>0)&1)))^1))|(S_6_1&C_6_0);
  tmp = S_6_2^C_6_1;
  S_7_1 = tmp^(((((A>>7)&1) & ((B>>1)&1)))^1);
  C_7_1 = (tmp&(((((A>>7)&1) & ((B>>1)&1)))^1))|(S_6_2&C_6_1);
  tmp = S_6_3^C_6_2;
  S_7_2 = tmp^(((((A>>7)&1) & ((B>>2)&1)))^1);
  C_7_2 = (tmp&(((((A>>7)&1) & ((B>>2)&1)))^1))|(S_6_3&C_6_2);
  tmp = S_6_4^C_6_3;
  S_7_3 = tmp^(((((A>>7)&1) & ((B>>3)&1)))^1);
  C_7_3 = (tmp&(((((A>>7)&1) & ((B>>3)&1)))^1))|(S_6_4&C_6_3);
  tmp = S_6_5^C_6_4;
  S_7_4 = tmp^(((((A>>7)&1) & ((B>>4)&1)))^1);
  C_7_4 = (tmp&(((((A>>7)&1) & ((B>>4)&1)))^1))|(S_6_5&C_6_4);
  tmp = S_6_6^C_6_5;
  S_7_5 = tmp^(((((A>>7)&1) & ((B>>5)&1)))^1);
  C_7_5 = (tmp&(((((A>>7)&1) & ((B>>5)&1)))^1))|(S_6_6&C_6_5);
  tmp = S_6_7^C_6_6;
  S_7_6 = tmp^(((((A>>7)&1) & ((B>>6)&1)))^1);
  C_7_6 = (tmp&(((((A>>7)&1) & ((B>>6)&1)))^1))|(S_6_7&C_6_6);
  S_7_7 = C_6_7^(((A>>7)&1) & ((B>>7)&1));
  C_7_7 = C_6_7&(((A>>7)&1) & ((B>>7)&1));
  S_8_0 = S_7_1^C_7_0;
  C_8_0 = S_7_1&C_7_0;
  tmp = S_7_2^C_8_0;
  S_8_1 = tmp^C_7_1;
  C_8_1 = (tmp&C_7_1)|(S_7_2&C_8_0);
  tmp = S_7_3^C_8_1;
  S_8_2 = tmp^C_7_2;
  C_8_2 = (tmp&C_7_2)|(S_7_3&C_8_1);
  tmp = S_7_4^C_8_2;
  S_8_3 = tmp^C_7_3;
  C_8_3 = (tmp&C_7_3)|(S_7_4&C_8_2);
  tmp = S_7_5^C_8_3;
  S_8_4 = tmp^C_7_4;
  C_8_4 = (tmp&C_7_4)|(S_7_5&C_8_3);
  tmp = S_7_6^C_8_4;
  S_8_5 = tmp^C_7_5;
  C_8_5 = (tmp&C_7_5)|(S_7_6&C_8_4);
  tmp = S_7_7^C_8_5;
  S_8_6 = tmp^C_7_6;
  C_8_6 = (tmp&C_7_6)|(S_7_7&C_8_5);
  tmp = 1^C_8_6;
  S_8_7 = tmp^C_7_7;
  C_8_7 = (tmp&C_7_7)|(1&C_8_6);
  P = 0;
  P |= (S_3_0 & 1) << 3;
  P |= (S_4_0 & 1) << 4;
  P |= (S_5_0 & 1) << 5;
  P |= (S_6_0 & 1) << 6;
  P |= (S_7_0 & 1) << 7;
  P |= (S_8_0 & 1) << 8;
  P |= (S_8_1 & 1) << 9;
  P |= (S_8_2 & 1) << 10;
  P |= (S_8_3 & 1) << 11;
  P |= (S_8_4 & 1) << 12;
  P |= (S_8_5 & 1) << 13;
  P |= (S_8_6 & 1) << 14;
  P |= (S_8_7 & 1) << 15;
  return P;
}

__device__ int16_t mul8s_1KVP(int8_t A, int8_t B)
{
  int16_t P, P_;
  uint8_t tmp, C_1_6,C_1_7,C_2_1,C_2_2,C_2_3,C_2_4,C_2_5,C_2_6,C_2_7,C_3_0,C_3_1,C_3_2,C_3_3,C_3_4,C_3_5,C_3_6,C_3_7,C_4_0,C_4_1,C_4_2,C_4_3,C_4_4,C_4_5,C_4_6,C_4_7,C_5_0,C_5_1,C_5_2,C_5_3,C_5_4,C_5_5,C_5_6,C_5_7,C_6_0,C_6_1,C_6_2,C_6_3,C_6_4,C_6_5,C_6_6,C_6_7,C_7_0,C_7_1,C_7_2,C_7_3,C_7_4,C_7_5,C_7_6,C_7_7,C_8_0,C_8_1,C_8_2,C_8_3,C_8_4,C_8_5,C_8_6,C_8_7,S_0_7,S_1_2,S_1_3,S_1_4,S_1_5,S_1_6,S_1_7,S_2_1,S_2_2,S_2_3,S_2_4,S_2_5,S_2_6,S_2_7,S_3_0,S_3_1,S_3_2,S_3_3,S_3_4,S_3_5,S_3_6,S_3_7,S_4_0,S_4_1,S_4_2,S_4_3,S_4_4,S_4_5,S_4_6,S_4_7,S_5_0,S_5_1,S_5_2,S_5_3,S_5_4,S_5_5,S_5_6,S_5_7,S_6_0,S_6_1,S_6_2,S_6_3,S_6_4,S_6_5,S_6_6,S_6_7,S_7_0,S_7_1,S_7_2,S_7_3,S_7_4,S_7_5,S_7_6,S_7_7,S_8_0,S_8_1,S_8_2,S_8_3,S_8_4,S_8_5,S_8_6,S_8_7;
  S_0_7 = 1;
  S_1_2 = (((A>>1)&1) & ((B>>2)&1));
  S_1_3 = (((A>>1)&1) & ((B>>3)&1));
  S_1_4 = (((A>>1)&1) & ((B>>4)&1));
  S_1_5 = (((A>>1)&1) & ((B>>5)&1));
  S_1_6 = S_0_7^(((A>>1)&1) & ((B>>6)&1));
  C_1_6 = S_0_7&(((A>>1)&1) & ((B>>6)&1));
  S_1_7 = 1^(((((A>>1)&1) & ((B>>7)&1)))^1);
  C_1_7 = 1&(((((A>>1)&1) & ((B>>7)&1)))^1);
  S_2_1 = S_1_2^(((A>>2)&1) & ((B>>1)&1));
  C_2_1 = S_1_2&(((A>>2)&1) & ((B>>1)&1));
  S_2_2 = S_1_3^(((A>>2)&1) & ((B>>2)&1));
  C_2_2 = S_1_3&(((A>>2)&1) & ((B>>2)&1));
  S_2_3 = S_1_4^(((A>>2)&1) & ((B>>3)&1));
  C_2_3 = S_1_4&(((A>>2)&1) & ((B>>3)&1));
  S_2_4 = S_1_5^(((A>>2)&1) & ((B>>4)&1));
  C_2_4 = S_1_5&(((A>>2)&1) & ((B>>4)&1));
  S_2_5 = S_1_6^(((A>>2)&1) & ((B>>5)&1));
  C_2_5 = S_1_6&(((A>>2)&1) & ((B>>5)&1));
  tmp = S_1_7^C_1_6;
  S_2_6 = tmp^(((A>>2)&1) & ((B>>6)&1));
  C_2_6 = (tmp&(((A>>2)&1) & ((B>>6)&1)))|(S_1_7&C_1_6);
  S_2_7 = C_1_7^(((((A>>2)&1) & ((B>>7)&1)))^1);
  C_2_7 = C_1_7&(((((A>>2)&1) & ((B>>7)&1)))^1);
  S_3_0 = S_2_1^(((A>>3)&1) & ((B>>0)&1));
  C_3_0 = S_2_1&(((A>>3)&1) & ((B>>0)&1));
  tmp = S_2_2^C_2_1;
  S_3_1 = tmp^(((A>>3)&1) & ((B>>1)&1));
  C_3_1 = (tmp&(((A>>3)&1) & ((B>>1)&1)))|(S_2_2&C_2_1);
  tmp = S_2_3^C_2_2;
  S_3_2 = tmp^(((A>>3)&1) & ((B>>2)&1));
  C_3_2 = (tmp&(((A>>3)&1) & ((B>>2)&1)))|(S_2_3&C_2_2);
  tmp = S_2_4^C_2_3;
  S_3_3 = tmp^(((A>>3)&1) & ((B>>3)&1));
  C_3_3 = (tmp&(((A>>3)&1) & ((B>>3)&1)))|(S_2_4&C_2_3);
  tmp = S_2_5^C_2_4;
  S_3_4 = tmp^(((A>>3)&1) & ((B>>4)&1));
  C_3_4 = (tmp&(((A>>3)&1) & ((B>>4)&1)))|(S_2_5&C_2_4);
  tmp = S_2_6^C_2_5;
  S_3_5 = tmp^(((A>>3)&1) & ((B>>5)&1));
  C_3_5 = (tmp&(((A>>3)&1) & ((B>>5)&1)))|(S_2_6&C_2_5);
  tmp = S_2_7^C_2_6;
  S_3_6 = tmp^(((A>>3)&1) & ((B>>6)&1));
  C_3_6 = (tmp&(((A>>3)&1) & ((B>>6)&1)))|(S_2_7&C_2_6);
  S_3_7 = C_2_7^(((((A>>3)&1) & ((B>>7)&1)))^1);
  C_3_7 = C_2_7&(((((A>>3)&1) & ((B>>7)&1)))^1);
  tmp = S_3_1^C_3_0;
  S_4_0 = tmp^(((A>>4)&1) & ((B>>0)&1));
  C_4_0 = (tmp&(((A>>4)&1) & ((B>>0)&1)))|(S_3_1&C_3_0);
  tmp = S_3_2^C_3_1;
  S_4_1 = tmp^(((A>>4)&1) & ((B>>1)&1));
  C_4_1 = (tmp&(((A>>4)&1) & ((B>>1)&1)))|(S_3_2&C_3_1);
  tmp = S_3_3^C_3_2;
  S_4_2 = tmp^(((A>>4)&1) & ((B>>2)&1));
  C_4_2 = (tmp&(((A>>4)&1) & ((B>>2)&1)))|(S_3_3&C_3_2);
  tmp = S_3_4^C_3_3;
  S_4_3 = tmp^(((A>>4)&1) & ((B>>3)&1));
  C_4_3 = (tmp&(((A>>4)&1) & ((B>>3)&1)))|(S_3_4&C_3_3);
  tmp = S_3_5^C_3_4;
  S_4_4 = tmp^(((A>>4)&1) & ((B>>4)&1));
  C_4_4 = (tmp&(((A>>4)&1) & ((B>>4)&1)))|(S_3_5&C_3_4);
  tmp = S_3_6^C_3_5;
  S_4_5 = tmp^(((A>>4)&1) & ((B>>5)&1));
  C_4_5 = (tmp&(((A>>4)&1) & ((B>>5)&1)))|(S_3_6&C_3_5);
  tmp = S_3_7^C_3_6;
  S_4_6 = tmp^(((A>>4)&1) & ((B>>6)&1));
  C_4_6 = (tmp&(((A>>4)&1) & ((B>>6)&1)))|(S_3_7&C_3_6);
  S_4_7 = C_3_7^(((((A>>4)&1) & ((B>>7)&1)))^1);
  C_4_7 = C_3_7&(((((A>>4)&1) & ((B>>7)&1)))^1);
  tmp = S_4_1^C_4_0;
  S_5_0 = tmp^(((A>>5)&1) & ((B>>0)&1));
  C_5_0 = (tmp&(((A>>5)&1) & ((B>>0)&1)))|(S_4_1&C_4_0);
  tmp = S_4_2^C_4_1;
  S_5_1 = tmp^(((A>>5)&1) & ((B>>1)&1));
  C_5_1 = (tmp&(((A>>5)&1) & ((B>>1)&1)))|(S_4_2&C_4_1);
  tmp = S_4_3^C_4_2;
  S_5_2 = tmp^(((A>>5)&1) & ((B>>2)&1));
  C_5_2 = (tmp&(((A>>5)&1) & ((B>>2)&1)))|(S_4_3&C_4_2);
  tmp = S_4_4^C_4_3;
  S_5_3 = tmp^(((A>>5)&1) & ((B>>3)&1));
  C_5_3 = (tmp&(((A>>5)&1) & ((B>>3)&1)))|(S_4_4&C_4_3);
  tmp = S_4_5^C_4_4;
  S_5_4 = tmp^(((A>>5)&1) & ((B>>4)&1));
  C_5_4 = (tmp&(((A>>5)&1) & ((B>>4)&1)))|(S_4_5&C_4_4);
  tmp = S_4_6^C_4_5;
  S_5_5 = tmp^(((A>>5)&1) & ((B>>5)&1));
  C_5_5 = (tmp&(((A>>5)&1) & ((B>>5)&1)))|(S_4_6&C_4_5);
  tmp = S_4_7^C_4_6;
  S_5_6 = tmp^(((A>>5)&1) & ((B>>6)&1));
  C_5_6 = (tmp&(((A>>5)&1) & ((B>>6)&1)))|(S_4_7&C_4_6);
  S_5_7 = C_4_7^(((((A>>5)&1) & ((B>>7)&1)))^1);
  C_5_7 = C_4_7&(((((A>>5)&1) & ((B>>7)&1)))^1);
  tmp = S_5_1^C_5_0;
  S_6_0 = tmp^(((A>>6)&1) & ((B>>0)&1));
  C_6_0 = (tmp&(((A>>6)&1) & ((B>>0)&1)))|(S_5_1&C_5_0);
  tmp = S_5_2^C_5_1;
  S_6_1 = tmp^(((A>>6)&1) & ((B>>1)&1));
  C_6_1 = (tmp&(((A>>6)&1) & ((B>>1)&1)))|(S_5_2&C_5_1);
  tmp = S_5_3^C_5_2;
  S_6_2 = tmp^(((A>>6)&1) & ((B>>2)&1));
  C_6_2 = (tmp&(((A>>6)&1) & ((B>>2)&1)))|(S_5_3&C_5_2);
  tmp = S_5_4^C_5_3;
  S_6_3 = tmp^(((A>>6)&1) & ((B>>3)&1));
  C_6_3 = (tmp&(((A>>6)&1) & ((B>>3)&1)))|(S_5_4&C_5_3);
  tmp = S_5_5^C_5_4;
  S_6_4 = tmp^(((A>>6)&1) & ((B>>4)&1));
  C_6_4 = (tmp&(((A>>6)&1) & ((B>>4)&1)))|(S_5_5&C_5_4);
  tmp = S_5_6^C_5_5;
  S_6_5 = tmp^(((A>>6)&1) & ((B>>5)&1));
  C_6_5 = (tmp&(((A>>6)&1) & ((B>>5)&1)))|(S_5_6&C_5_5);
  tmp = S_5_7^C_5_6;
  S_6_6 = tmp^(((A>>6)&1) & ((B>>6)&1));
  C_6_6 = (tmp&(((A>>6)&1) & ((B>>6)&1)))|(S_5_7&C_5_6);
  S_6_7 = C_5_7^(((((A>>6)&1) & ((B>>7)&1)))^1);
  C_6_7 = C_5_7&(((((A>>6)&1) & ((B>>7)&1)))^1);
  tmp = S_6_1^C_6_0;
  S_7_0 = tmp^(((((A>>7)&1) & ((B>>0)&1)))^1);
  C_7_0 = (tmp&(((((A>>7)&1) & ((B>>0)&1)))^1))|(S_6_1&C_6_0);
  tmp = S_6_2^C_6_1;
  S_7_1 = tmp^(((((A>>7)&1) & ((B>>1)&1)))^1);
  C_7_1 = (tmp&(((((A>>7)&1) & ((B>>1)&1)))^1))|(S_6_2&C_6_1);
  tmp = S_6_3^C_6_2;
  S_7_2 = tmp^(((((A>>7)&1) & ((B>>2)&1)))^1);
  C_7_2 = (tmp&(((((A>>7)&1) & ((B>>2)&1)))^1))|(S_6_3&C_6_2);
  tmp = S_6_4^C_6_3;
  S_7_3 = tmp^(((((A>>7)&1) & ((B>>3)&1)))^1);
  C_7_3 = (tmp&(((((A>>7)&1) & ((B>>3)&1)))^1))|(S_6_4&C_6_3);
  tmp = S_6_5^C_6_4;
  S_7_4 = tmp^(((((A>>7)&1) & ((B>>4)&1)))^1);
  C_7_4 = (tmp&(((((A>>7)&1) & ((B>>4)&1)))^1))|(S_6_5&C_6_4);
  tmp = S_6_6^C_6_5;
  S_7_5 = tmp^(((((A>>7)&1) & ((B>>5)&1)))^1);
  C_7_5 = (tmp&(((((A>>7)&1) & ((B>>5)&1)))^1))|(S_6_6&C_6_5);
  tmp = S_6_7^C_6_6;
  S_7_6 = tmp^(((((A>>7)&1) & ((B>>6)&1)))^1);
  C_7_6 = (tmp&(((((A>>7)&1) & ((B>>6)&1)))^1))|(S_6_7&C_6_6);
  S_7_7 = C_6_7^(((A>>7)&1) & ((B>>7)&1));
  C_7_7 = C_6_7&(((A>>7)&1) & ((B>>7)&1));
  S_8_0 = S_7_1^C_7_0;
  C_8_0 = S_7_1&C_7_0;
  tmp = S_7_2^C_8_0;
  S_8_1 = tmp^C_7_1;
  C_8_1 = (tmp&C_7_1)|(S_7_2&C_8_0);
  tmp = S_7_3^C_8_1;
  S_8_2 = tmp^C_7_2;
  C_8_2 = (tmp&C_7_2)|(S_7_3&C_8_1);
  tmp = S_7_4^C_8_2;
  S_8_3 = tmp^C_7_3;
  C_8_3 = (tmp&C_7_3)|(S_7_4&C_8_2);
  tmp = S_7_5^C_8_3;
  S_8_4 = tmp^C_7_4;
  C_8_4 = (tmp&C_7_4)|(S_7_5&C_8_3);
  tmp = S_7_6^C_8_4;
  S_8_5 = tmp^C_7_5;
  C_8_5 = (tmp&C_7_5)|(S_7_6&C_8_4);
  tmp = S_7_7^C_8_5;
  S_8_6 = tmp^C_7_6;
  C_8_6 = (tmp&C_7_6)|(S_7_7&C_8_5);
  tmp = 1^C_8_6;
  S_8_7 = tmp^C_7_7;
  C_8_7 = (tmp&C_7_7)|(1&C_8_6);
  P = 0;
  P |= (S_3_0 & 1) << 3;
  P |= (S_4_0 & 1) << 4;
  P |= (S_5_0 & 1) << 5;
  P |= (S_6_0 & 1) << 6;
  P |= (S_7_0 & 1) << 7;
  P |= (S_8_0 & 1) << 8;
  P |= (S_8_1 & 1) << 9;
  P |= (S_8_2 & 1) << 10;
  P |= (S_8_3 & 1) << 11;
  P |= (S_8_4 & 1) << 12;
  P |= (S_8_5 & 1) << 13;
  P |= (S_8_6 & 1) << 14;
  P |= (S_8_7 & 1) << 15;
  return P;
}

__device__ int16_t mul8s_1L2J(int8_t A, int8_t B)
{
 int16_t O;
 uint8_t n162,O13,n85,O15,n38,n39,n88,O10,n290,n319,n95,O5,n36,n37,n349,n348,O11,n303,n341,O2,n343,n345,n117,n346,n132,n133,n228,n229,n136,n137,n134,n135,n222,n223,n138,n139,n226,n227,n224,O1,n160,n87,n327,n86,n316,n151,n231,O4,n325,n80,n235,n234,n237,n236,n81,n233,n83,n82,n200,n232,n239,n238,n320,n201,n169,n129,n128,n168,n334,n335,n127,n126,n330,n331,n332,n122,n89,O12,n64,n155,O6,n211,n317,n240,n98,n99,n245,n246,n247,n92,n93,n90,n91,n96,n97,n94,O0,n158,n159,n342,n329,n328,n150,n152,n153,n323,n322,n321,n157,n67,n66,n65,n333,n63,n62,n60,n284,n291,n307,n69,n230,n125,n175,n124,n301,n68,n173,n253,n252,n304,n257,n170,n255,n254,n121,O3,n171,n318,n120,n161,n149,n148,n123,n340,n143,n142,n310,n140,n147,n146,n145,n144,n74,n75,n76,n77,n70,n71,n72,n73,O9,n262,n339,n78,n79,n263,n338,n294,n178,n293,n261,n176,n177,n174,n306,n172,n300,n268,n269,n266,n267,n264,n265,n309,n308,n260,n179,n248,n131,n289,n326,n344,n49,n48,n286,n287,n280,n282,n283,n40,n43,n42,n45,n44,n47,O14,n250,n299,n251,O8,n298,n220,n256,n279,n278,n163,n221,n165,n164,n167,n166,n271,n270,n273,n272,n275,n274,n277,n276,n209,n324,n130,n225,n259,n315,n297,n296,n295,n258,n156,n292,n58,n59,n56,n57,n54,n55,n52,n53,n50,n51,n350,n314,n305,n351,n337,n198,n199,n106,n195,n196,n190,n191,n192,n193,n114,n116,n302,n110,n111,n112,n113,n204,n205,n206,n207,n118,n119,n202,n203,n219,n249,n218,n288,n100,n242,n285,O7,n312,n243,n313,n244,n208,n141,n214,n189,n188,n187,n186,n185,n184,n183,n182,n181,n180,n107,n194,n105,n104,n103,n102,n101,n217,n216,n215,n210,n213,n212,n109,n108;
 O0=0;
 O1=0;
 O2=((B >> 1)&1)&((A >> 1)&1);
 n108=((B >> 4)&1)&((A >> 3)&1);
 n110=((B >> 6)&1)&((A >> 1)&1);
 n111=((B >> 5)&1)&((A >> 2)&1);
 n112=((B >> 3)&1)&((A >> 4)&1);
 n113=((B >> 2)&1)&((A >> 5)&1);
 n114=((B >> 1)&1)&((A >> 6)&1);
 n122=((B >> 1)&1)&((A >> 7)&1);
 n147=((B >> 5)&1)&((A >> 3)&1);
 n149=((B >> 7)&1)&((A >> 1)&1);
 n150=((B >> 6)&1)&((A >> 2)&1);
 n151=((B >> 4)&1)&((A >> 4)&1);
 n152=((B >> 3)&1)&((A >> 5)&1);
 n153=((B >> 2)&1)&((A >> 6)&1);
 n167=((B >> 2)&1)&((A >> 7)&1);
 n192=((B >> 6)&1)&((A >> 3)&1);
 n193=((B >> 7)&1)&((A >> 2)&1);
 n194=((B >> 5)&1)&((A >> 4)&1);
 n195=((B >> 4)&1)&((A >> 5)&1);
 n196=((B >> 3)&1)&((A >> 6)&1);
 n212=((B >> 3)&1)&((A >> 7)&1);
 n227=((B >> 5)&1)&((A >> 5)&1);
 n235=((B >> 6)&1)&((A >> 4)&1);
 n238=~(((A >> 3)&1)|((A >> 2)&1));
 n240=((B >> 4)&1)&((A >> 6)&1);
 n260=((B >> 4)&1)&((A >> 7)&1);
 n277=((B >> 7)&1)&((A >> 4)&1);
 n279=((B >> 6)&1)&((A >> 5)&1);
 n280=((B >> 5)&1)&((A >> 6)&1);
 n300=((B >> 5)&1)&((A >> 7)&1);
 n308=((B >> 6)&1)&((A >> 6)&1);
 n310=((B >> 7)&1)&((A >> 5)&1);
 n330=((B >> 6)&1)&((A >> 7)&1);
 n334=((B >> 7)&1)&((A >> 6)&1);
 n346=((B >> 7)&1)&((A >> 7)&1);
 n37=((B >> 2)&1)&((A >> 2)&1);
 n39=((B >> 1)&1)&((A >> 2)&1);
 n40=((B >> 2)&1)&((A >> 1)&1);
 n43=((B >> 1)&1)&((A >> 3)&1);
 n45=((B >> 3)&1)&((A >> 1)&1);
 n56=((B >> 2)&1)&((A >> 3)&1);
 n58=((B >> 4)&1)&((A >> 1)&1);
 n59=((B >> 3)&1)&((A >> 2)&1);
 n60=((B >> 1)&1)&((A >> 4)&1);
 n78=((B >> 3)&1)&((A >> 3)&1);
 n80=((B >> 5)&1)&((A >> 1)&1);
 n81=((B >> 4)&1)&((A >> 2)&1);
 n82=((B >> 2)&1)&((A >> 4)&1);
 n83=((B >> 1)&1)&((A >> 5)&1);
 n107=n81&n80;
 n109=n111^n110;
 n146=n111&n110;
 n148=~(n150^n149);
 n191=n150&~n149;
 n233=n192&n193;
 n237=((B >> 7)&1)&~n238;
 n239=((A >> 3)&1)&n193;
 n36=n37&O2;
 n38=~(n40|n39);
 n44=n45^n37;
 n55=n45&n37;
 n57=n59^n58;
 n77=n59&n58;
 n79=n81^n80;
 O3=~(n38|n36);
 n102=n78&n77;
 n103=n78&n79;
 n104=n79&n77;
 n106=~(n108^n107);
 n141=n108&n107;
 n142=n108&n109;
 n143=n109&n107;
 n145=~(n147^n146);
 n186=n147&n146;
 n187=n147&n148;
 n188=n148&n146;
 n190=~(n192^n191);
 n232=n192&n191;
 n234=n193&n191;
 n236=~n239&n237;
 n276=~(n277|n237);
 n278=((A >> 4)&1)&n237;
 n42=~(n43^n36);
 n50=n43&n36;
 n51=n43&n44;
 n52=n44&n36;
 n54=~(n56^n55);
 n72=n56&n55;
 n73=n56&n57;
 n74=n57&n55;
 n76=~(n78^n77);
 O4=~(n44^n42);
 n101=~(n103|n102);
 n105=n109^n106;
 n140=~(n142|n141);
 n144=n148^n145;
 n185=~(n187|n186);
 n189=n193^n190;
 n231=~(n233|n232);
 n273=n235&n236;
 n275=~(n278|n276);
 n309=~(n310^n276);
 n333=~n310&n276;
 n49=~(n51|n50);
 n53=n57^n54;
 n71=~(n73|n72);
 n75=n79^n76;
 n100=~n104&n101;
 n135=n112&~n105;
 n139=~n143&n140;
 n180=n151&~n144;
 n184=~n188&n185;
 n225=n194&~n189;
 n230=~n234&n231;
 n306=n279&n275;
 n328=n308&n309;
 n332=~n334&n333;
 n335=((A >> 6)&1)&~n333;
 n48=~n52&n49;
 n66=n60&~n53;
 n70=~n74&n71;
 n96=n82&~n75;
 n134=~(n105|n100);
 n136=n112&~n100;
 n138=~(n144^n139);
 n179=~(n144|n139);
 n181=n151&~n139;
 n183=~(n189^n184);
 n224=~(n189|n184);
 n226=n194&~n184;
 n229=n235^n230;
 n272=n235&~n230;
 n274=n236&~n230;
 n331=~(n335|n332);
 n345=~(n346^n332);
 n350=n346&n332;
 n47=~(n53^n48);
 n65=~(n53|n48);
 n67=n60&~n48;
 n69=~(n75^n70);
 n95=~(n75|n70);
 n97=n82&~n70;
 n99=~(n105^n100);
 O5=~(n60^n47);
 n133=~(n135|n134);
 n137=n151^n138;
 n178=~(n180|n179);
 n182=n194^n183;
 n223=~(n225|n224);
 n228=n236^n229;
 n271=~(n273|n272);
 n64=~(n66|n65);
 n68=n82^n69;
 n94=~(n96|n95);
 n98=n112^n99;
 n129=n113&~n98;
 n132=~n136&n133;
 n174=n152&~n137;
 n177=~n181&n178;
 n219=n195&~n182;
 n222=~n226&n223;
 n266=n227&~n228;
 n270=~n274&n271;
 n63=~n67&n64;
 n90=n83&~n68;
 n93=~n97&n94;
 n127=~(n98|n93);
 n128=n113&~n93;
 n131=~(n137^n132);
 n172=~(n137|n132);
 n173=n152&~n132;
 n176=~(n182^n177);
 n217=~(n182|n177);
 n218=n195&~n177;
 n221=n227^n222;
 n265=n227&~n222;
 n267=~(n228|n222);
 n269=n275^n270;
 n305=n275&~n270;
 n307=n279&~n270;
 n62=~(n68^n63);
 n88=~(n68|n63);
 n89=n83&~n63;
 n92=~(n98^n93);
 O6=~(n83^n62);
 n126=~(n128|n127);
 n130=n152^n131;
 n171=~(n173|n172);
 n175=n195^n176;
 n216=~(n218|n217);
 n220=~(n228^n221);
 n264=~(n266|n265);
 n268=n279^n269;
 n304=~(n306|n305);
 n87=~(n89|n88);
 n91=n113^n92;
 n121=n114&~n91;
 n125=~n129&n126;
 n166=n153&~n130;
 n170=~n174&n171;
 n211=n196&~n175;
 n215=~n219&n216;
 n258=n240&~n220;
 n263=~n267&n264;
 n298=n280&~n268;
 n303=~n307&n304;
 n86=~n90&n87;
 n119=~(n91|n86);
 n120=n114&~n86;
 n124=~(n130^n125);
 n164=~(n130|n125);
 n165=n153&~n125;
 n169=~(n175^n170);
 n209=~(n175|n170);
 n210=n196&~n170;
 n214=~(n220^n215);
 n257=~(n220|n215);
 n259=n240&~n215;
 n262=~(n268^n263);
 n297=~(n268|n263);
 n299=n280&~n263;
 n302=n308^n303;
 n327=n308&~n303;
 n329=n309&~n303;
 n85=~(n91^n86);
 O7=~(n114^n85);
 n118=~(n120|n119);
 n123=n153^n124;
 n163=~(n165|n164);
 n168=n196^n169;
 n208=~(n210|n209);
 n213=n240^n214;
 n256=~(n258|n257);
 n261=n280^n262;
 n296=~(n298|n297);
 n301=n309^n302;
 n326=~(n328|n327);
 n117=~n121&n118;
 n158=~(n122|n123);
 n162=~n166&n163;
 n203=~(n167|n168);
 n207=~n211&n208;
 n251=~(n212|n213);
 n255=~n259&n256;
 n291=~(n260|n261);
 n295=~n299&n296;
 n321=~(n300|n301);
 n325=~n329&n326;
 n116=~(n122^n117);
 n157=~(n122|n117);
 n159=~(n123|n117);
 n161=~(n167^n162);
 n202=~(n167|n162);
 n204=~(n168|n162);
 n206=~(n212^n207);
 n250=~(n212|n207);
 n252=~(n213|n207);
 n254=~(n260^n255);
 n290=~(n260|n255);
 n292=~(n261|n255);
 n294=~(n300^n295);
 n320=~(n300|n295);
 n322=~(n301|n295);
 n324=n330^n325;
 n343=~(n330|n325);
 O8=n123^n116;
 n156=~(n158|n157);
 n160=~(n168^n161);
 n201=~(n203|n202);
 n205=~(n213^n206);
 n249=~(n251|n250);
 n253=~(n261^n254);
 n289=~(n291|n290);
 n293=~(n301^n294);
 n319=~(n321|n320);
 n323=n331^n324;
 n342=~(n331|n343);
 n155=~n159&n156;
 n200=~n204&n201;
 n248=~n252&n249;
 n288=~n292&n289;
 n318=~n322&n319;
 O9=n160^n155;
 n198=~(n160|n155);
 n199=~(n205^n200);
 n246=~(n205|n200);
 n286=~(n253|n248);
 n316=~(n293|n288);
 n341=n323&~n318;
 O10=~(n199^n198);
 n245=~n205&n198;
 n247=~n200&n198;
 n340=n342&~n341;
 n244=~(n246|n245);
 n243=~n247&n244;
 n242=~(n248^n243);
 n285=~(n248|n243);
 n287=~(n253|n243);
 O11=n253^n242;
 n284=~(n286|n285);
 n283=~n287&n284;
 n282=~(n288^n283);
 n315=~(n288|n283);
 n317=~(n293|n283);
 O12=n293^n282;
 n314=~(n316|n315);
 n313=~n317&n314;
 n312=~(n318^n313);
 n339=~(n318|n313);
 n344=n323&~n313;
 O13=~(n323^n312);
 n338=n340&~n339;
 n337=~n344&n338;
 O14=n345^n337;
 n349=n346&~n337;
 n351=n332&~n337;
 n348=~(n350|n349);
 O15=~n351&n348;
 O = (O0 << 0)|(O1 << 1)|(O2 << 2)|(O3 << 3)|(O4 << 4)|(O5 << 5)|(O6 << 6)|(O7 << 7)|(O8 << 8)|(O9 << 9)|(O10 << 10)|(O11 << 11)|(O12 << 12)|(O13 << 13)|(O14 << 14)|(O15 << 15);
 return O;
}

__device__ int16_t mul8s_1L2L(int8_t A, int8_t B)
{
 int16_t O;
 uint8_t n38,n39,n88,O10,n95,O5,n36,n37,n209,O2,n132,n133,n130,n131,n136,n137,n134,n100,n222,n208,n138,n139,n226,n227,n224,n235,n234,n236,O12,n231,O4,n230,n85,n84,n237,n86,n81,n80,n83,n82,n118,n232,n239,n119,n129,n128,n125,n124,n127,n126,n121,n120,n123,n122,n89,n92,n238,n240,n98,n99,n245,n246,n247,n248,n249,n90,n91,n96,n97,n94,O0,n158,n159,n210,n150,n152,n153,n154,n155,n203,n157,n67,n66,n65,n64,n63,n62,n60,n189,n69,n68,n156,n173,n252,n250,n93,O15,O3,n233,n161,n149,n148,n143,n142,n141,n140,n147,n146,n145,n144,n74,n75,n76,n77,n70,n71,n72,n73,O9,n78,n79,n176,n177,n174,n175,n172,O6,n170,n171,n228,n178,n179,n229,n49,n48,n40,n43,n42,n45,n44,n47,O14,O8,n220,O1,n160,n163,n162,n165,n164,n167,n166,n169,n168,n194,n225,O11,n58,n59,n56,n57,n54,n55,n52,n53,n50,n51,n223,n198,n199,n195,n196,n197,n190,n191,n192,n193,n114,n115,n117,n110,n111,n112,n113,n204,n205,n206,n207,n200,n201,n202,n102,O13,n135,n242,n221,n243,n244,O7,n188,n186,n185,n184,n183,n182,n181,n180,n107,n106,n105,n104,n103,n211,n101,n218,n217,n216,n215,n214,n213,n212,n109,n108;
 O0=0;
 O1=0;
 O2=0;
 O3=0;
 O4=((B >> 2)&1)&((A >> 2)&1);
 n111=((B >> 5)&1)&((A >> 4)&1);
 n113=((B >> 7)&1)&((A >> 2)&1);
 n114=((B >> 4)&1)&((A >> 5)&1);
 n115=((B >> 3)&1)&((A >> 6)&1);
 n129=((B >> 3)&1)&((A >> 7)&1);
 n147=((B >> 6)&1)&((A >> 4)&1);
 n148=((B >> 7)&1)&((A >> 3)&1);
 n149=((B >> 5)&1)&((A >> 5)&1);
 n150=((B >> 4)&1)&((A >> 6)&1);
 n166=((B >> 4)&1)&((A >> 7)&1);
 n174=((B >> 5)&1)&((A >> 6)&1);
 n182=((B >> 6)&1)&((A >> 5)&1);
 n185=~(((A >> 4)&1)|((A >> 3)&1));
 n206=((B >> 5)&1)&((A >> 7)&1);
 n216=((B >> 7)&1)&((A >> 5)&1);
 n218=((B >> 6)&1)&((A >> 6)&1);
 n239=((B >> 7)&1)&((A >> 6)&1);
 n240=((B >> 6)&1)&((A >> 7)&1);
 n250=((B >> 7)&1)&((A >> 7)&1);
 n37=((B >> 3)&1)&((A >> 3)&1);
 n39=((B >> 2)&1)&((A >> 3)&1);
 n40=((B >> 3)&1)&((A >> 2)&1);
 n43=((B >> 2)&1)&((A >> 4)&1);
 n45=((B >> 4)&1)&((A >> 2)&1);
 n56=((B >> 3)&1)&((A >> 4)&1);
 n58=((B >> 5)&1)&((A >> 2)&1);
 n59=((B >> 4)&1)&((A >> 3)&1);
 n60=((B >> 2)&1)&((A >> 5)&1);
 n78=((B >> 6)&1)&((A >> 3)&1);
 n80=((B >> 5)&1)&((A >> 3)&1);
 n81=((B >> 6)&1)&((A >> 2)&1);
 n84=((B >> 4)&1)&((A >> 4)&1);
 n85=((B >> 3)&1)&((A >> 5)&1);
 n86=((B >> 2)&1)&((A >> 6)&1);
 n94=((B >> 2)&1)&((A >> 7)&1);
 n112=~(n113^n78);
 n146=~n113&n78;
 n180=n147&n148;
 n184=((B >> 7)&1)&~n185;
 n186=((A >> 4)&1)&n148;
 n36=n37&O4;
 n38=~(n40|n39);
 n44=n45^n37;
 n55=n45&n37;
 n57=n59^n58;
 n77=n78&n58;
 n79=~(n81|n80);
 n83=n59&n58;
 O5=~(n38|n36);
 n107=n84&n83;
 n110=~(n111^n77);
 n141=n111&n77;
 n142=n111&n112;
 n143=n112&n77;
 n145=~(n147^n146);
 n179=n147&n146;
 n181=n148&n146;
 n183=~n186&n184;
 n215=~(n216|n184);
 n217=((A >> 5)&1)&n184;
 n42=~(n43^n36);
 n50=n43&n36;
 n51=n43&n44;
 n52=n44&n36;
 n54=~(n56^n55);
 n72=n56&n55;
 n73=n56&n57;
 n74=n57&n55;
 n76=~(n79|n77);
 n82=~(n84^n83);
 O6=~(n44^n42);
 n106=n84&n76;
 n108=n83&n76;
 n109=n112^n110;
 n140=~(n142|n141);
 n144=n148^n145;
 n178=~(n180|n179);
 n212=n182&n183;
 n214=~(n217|n215);
 n238=~(n239^n215);
 n249=~n239&n215;
 n49=~(n51|n50);
 n53=n57^n54;
 n71=~(n73|n72);
 n75=n82^n76;
 n100=n85&~n75;
 n105=~(n107|n106);
 n135=n114&~n109;
 n139=~n143&n140;
 n172=n149&~n144;
 n177=~n181&n178;
 n236=n218&n214;
 n248=~(n250^n249);
 n48=~n52&n49;
 n66=n60&~n53;
 n70=~n74&n71;
 n101=n85&~n70;
 n104=~n108&n105;
 n138=~(n144^n139);
 n171=~(n144|n139);
 n173=n149&~n139;
 n176=n182^n177;
 n211=n182&~n177;
 n213=n183&~n177;
 n47=~(n53^n48);
 n65=~(n53|n48);
 n67=n60&~n48;
 n69=~(n75^n70);
 n99=~(n75|n70);
 O7=~(n60^n47);
 n103=~(n109^n104);
 n134=~(n109|n104);
 n136=n114&~n104;
 n137=n149^n138;
 n170=~(n172|n171);
 n175=n183^n176;
 n210=~(n212|n211);
 n64=~(n66|n65);
 n68=n85^n69;
 n98=~(n100|n99);
 n102=n114^n103;
 n133=~(n135|n134);
 n165=n150&~n137;
 n169=~n173&n170;
 n204=n174&~n175;
 n209=~n213&n210;
 n63=~n67&n64;
 n93=n86&~n68;
 n97=~n101&n98;
 n126=~(n102|n97);
 n127=n115&~n97;
 n128=n115&~n102;
 n132=~n136&n133;
 n168=n174^n169;
 n203=n174&~n169;
 n205=~(n175|n169);
 n208=n214^n209;
 n235=n214&~n209;
 n237=n218&~n209;
 n62=~(n68^n63);
 n91=~(n68|n63);
 n92=n86&~n63;
 n96=~(n102^n97);
 O8=~(n86^n62);
 n125=~(n127|n126);
 n131=~(n137^n132);
 n163=~(n137|n132);
 n164=n150&~n132;
 n167=~(n175^n168);
 n202=~(n204|n203);
 n207=n218^n208;
 n234=~(n236|n235);
 n90=~(n92|n91);
 n95=n115^n96;
 n120=~(n94|n95);
 n124=~n128&n125;
 n130=n150^n131;
 n162=~(n164|n163);
 n197=~(n166|n167);
 n201=~n205&n202;
 n229=~(n206|n207);
 n233=~n237&n234;
 n89=~n93&n90;
 n119=~(n94|n89);
 n121=~(n95|n89);
 n123=~(n129^n124);
 n156=~(n129|n124);
 n157=~(n129|n130);
 n158=~(n124|n130);
 n161=~n165&n162;
 n200=~(n206^n201);
 n228=~(n206|n201);
 n230=~(n207|n201);
 n232=~(n238^n233);
 n88=~(n94^n89);
 O9=n95^n88;
 n118=~(n120|n119);
 n122=~(n130^n123);
 n155=~(n157|n156);
 n160=~(n166^n161);
 n196=~(n166|n161);
 n198=~(n167|n161);
 n199=~(n207^n200);
 n227=~(n229|n228);
 n231=~(n240^n232);
 n117=~n121&n118;
 n154=~n158&n155;
 n159=~(n167^n160);
 n195=~(n197|n196);
 n226=~n230&n227;
 O10=n122^n117;
 n152=~(n122|n117);
 n153=~(n159^n154);
 n192=~(n159|n154);
 n194=~n198&n195;
 O11=~(n153^n152);
 n191=~n159&n152;
 n193=~n154&n152;
 n224=~(n199|n194);
 n190=~(n192|n191);
 n189=~n193&n190;
 n188=~(n194^n189);
 n223=~(n194|n189);
 n225=~(n199|n189);
 O12=n199^n188;
 n222=~(n224|n223);
 n221=~n225&n222;
 n220=n226^n221;
 n245=n226&n221;
 O13=n231^n220;
 n244=n233&n245;
 n247=~(n233|n245);
 n243=~(n240|n244);
 n246=~(n238|n247);
 n242=n246&~n243;
 O14=n248^n242;
 n252=n249&~n242;
 O15=~(n250|n252);
 O = (O0 << 0)|(O1 << 1)|(O2 << 2)|(O3 << 3)|(O4 << 4)|(O5 << 5)|(O6 << 6)|(O7 << 7)|(O8 << 8)|(O9 << 9)|(O10 << 10)|(O11 << 11)|(O12 << 12)|(O13 << 13)|(O14 << 14)|(O15 << 15);
 return O;
}

__device__ int16_t mul8s_1L2N(int8_t A, int8_t B)
{
 int16_t O;
 uint8_t n38,n39,O10,n95,O5,n36,n37,O2,n132,n133,n130,n131,n136,n137,n134,n135,n138,n139,n111,O1,n151,O4,n84,n87,n86,n81,n80,n83,n82,n89,n129,n128,n125,n124,n127,n126,n121,n120,n123,n122,n88,n98,n99,n92,n93,n90,n91,n96,n97,n94,O0,n158,n159,n150,n152,n153,n154,n155,n156,n157,n67,n66,n65,n63,n62,n61,n60,n69,n68,O15,O3,n149,n148,n143,n142,n141,n147,n146,n145,n144,n74,n75,n76,n77,n70,n71,n72,n73,O9,n78,n79,n174,n172,O6,n170,n171,n49,n48,n40,n43,n42,n45,n44,n47,O8,n161,n160,n163,n162,n165,n167,n166,n169,n168,O14,O11,n58,n59,n56,n57,n54,n55,n52,n53,n50,n51,n114,n115,n116,n117,n110,n113,O12,n118,n119,O13,n100,O7,n107,n106,n105,n104,n103,n102,n101,n109,n108;
 O0=0;
 O1=0;
 O2=0;
 O3=0;
 O4=0;
 O5=0;
 O6=((B >> 3)&1)&((A >> 3)&1);
 n109=((B >> 6)&1)&((A >> 5)&1);
 n110=((B >> 7)&1)&((A >> 4)&1);
 n111=((B >> 5)&1)&((A >> 6)&1);
 n126=((B >> 5)&1)&((A >> 7)&1);
 n134=((B >> 6)&1)&((A >> 6)&1);
 n137=~(((A >> 5)&1)|((A >> 4)&1));
 n161=((B >> 7)&1)&((A >> 6)&1);
 n163=((B >> 6)&1)&((A >> 7)&1);
 n172=((B >> 7)&1)&((A >> 7)&1);
 n37=((B >> 4)&1)&((A >> 4)&1);
 n39=((B >> 3)&1)&((A >> 4)&1);
 n40=((B >> 4)&1)&((A >> 3)&1);
 n43=((B >> 3)&1)&((A >> 5)&1);
 n45=((B >> 5)&1)&((A >> 3)&1);
 n56=((B >> 6)&1)&((A >> 4)&1);
 n58=((B >> 5)&1)&((A >> 4)&1);
 n59=((B >> 6)&1)&((A >> 3)&1);
 n62=((B >> 4)&1)&((A >> 5)&1);
 n63=((B >> 3)&1)&((A >> 6)&1);
 n71=((B >> 3)&1)&((A >> 7)&1);
 n81=((B >> 5)&1)&((A >> 5)&1);
 n83=((B >> 7)&1)&((A >> 3)&1);
 n84=((B >> 4)&1)&((A >> 6)&1);
 n98=((B >> 4)&1)&((A >> 7)&1);
 n108=~n83&n56;
 n132=n109&n110;
 n136=((B >> 7)&1)&~n137;
 n138=((A >> 5)&1)&n110;
 n36=n37&O6;
 n38=~(n40|n39);
 n44=n45^n37;
 n55=n56&n45;
 n57=~(n59|n58);
 n61=n45&n37;
 n82=~(n83^n56);
 O7=~(n38|n36);
 n103=n81&n55;
 n104=n81&n82;
 n105=n82&n55;
 n107=~(n109^n108);
 n131=n109&n108;
 n133=n110&n108;
 n135=~n138&n136;
 n160=~(n161|n136);
 n162=((A >> 6)&1)&n136;
 n42=~(n43^n36);
 n50=n43&n36;
 n51=n43&n44;
 n52=n44&n36;
 n54=~(n57|n55);
 n60=~(n62^n61);
 n77=n62&n61;
 n80=~(n81^n55);
 O8=~(n44^n42);
 n102=~(n104|n103);
 n106=n110^n107;
 n130=~(n132|n131);
 n157=n134&n135;
 n159=~(n162|n160);
 n171=~(n172^n160);
 n49=~(n51|n50);
 n53=n60^n54;
 n76=n62&n54;
 n78=n61&n54;
 n79=n82^n80;
 n101=~n105&n102;
 n124=n111&~n106;
 n129=~n133&n130;
 n48=~n52&n49;
 n69=n63&~n53;
 n75=~(n77|n76);
 n96=n84&~n79;
 n100=~(n106^n101);
 n123=~(n106|n101);
 n125=n111&~n101;
 n128=n134^n129;
 n156=n134&~n129;
 n158=n135&~n129;
 n47=~(n53^n48);
 n68=~(n53|n48);
 n70=n63&~n48;
 n74=~n78&n75;
 O9=~(n63^n47);
 n122=~(n124|n123);
 n127=n135^n128;
 n155=~(n157|n156);
 n67=~(n69|n68);
 n73=~(n79^n74);
 n95=~(n79|n74);
 n97=n84&~n74;
 n99=n111^n100;
 n117=~(n98|n99);
 n121=~n125&n122;
 n150=~(n126|n127);
 n154=~n158&n155;
 n66=~n70&n67;
 n72=n84^n73;
 n94=~(n96|n95);
 n120=~(n126^n121);
 n149=~(n126|n121);
 n151=~(n127|n121);
 n153=n159^n154;
 n65=~(n71^n66);
 n88=~(n71|n66);
 n89=~(n71|n72);
 n90=~(n66|n72);
 n93=~n97&n94;
 O10=n72^n65;
 n116=~(n98|n93);
 n118=~(n99|n93);
 n119=~(n127^n120);
 n148=~(n150|n149);
 n152=~(n163^n153);
 n87=~(n89|n88);
 n92=~(n98^n93);
 n115=~(n117|n116);
 n147=~n151&n148;
 n86=~n90&n87;
 n91=~(n99^n92);
 O11=n91^n86;
 n114=~n118&n115;
 n139=~(n91|n86);
 n113=~(n119^n114);
 n144=~(n119|n114);
 n145=~n119&n139;
 n146=~n114&n139;
 O12=~(n139^n113);
 n143=~(n145|n144);
 n142=~n146&n143;
 n141=n147^n142;
 n168=n147&n142;
 O13=~(n152^n141);
 n167=n154&n168;
 n170=~(n154|n168);
 n166=~(n163|n167);
 n169=~(n159|n170);
 n165=n169&~n166;
 O14=n171^n165;
 n174=n160&~n165;
 O15=~(n172|n174);
 O = (O0 << 0)|(O1 << 1)|(O2 << 2)|(O3 << 3)|(O4 << 4)|(O5 << 5)|(O6 << 6)|(O7 << 7)|(O8 << 8)|(O9 << 9)|(O10 << 10)|(O11 << 11)|(O12 << 12)|(O13 << 13)|(O14 << 14)|(O15 << 15);
 return O;
}

__device__ int16_t mul8s_1L12(int8_t A, int8_t B)
{
  int16_t P, P_;
  uint8_t tmp, C_6_1,C_6_7,C_7_0,C_7_1,C_7_2,C_7_3,C_7_4,C_7_5,C_7_6,C_7_7,S_0_7,S_1_6,S_2_5,S_3_4,S_4_3,S_5_2,S_6_0,S_6_1,S_6_2,S_6_3,S_6_4,S_6_5,S_6_6,S_6_7,S_7_0,S_7_1,S_7_2,S_7_3,S_7_4,S_7_5,S_7_6,S_7_7,S_8_0,S_8_1,S_8_2,S_8_3,S_8_4,S_8_5,S_8_6,S_8_7,S_8_8;
  S_0_7 = 1;
  S_1_6 = 1;
  S_2_5 = 1;
  S_3_4 = 1;
  S_4_3 = 1;
  S_5_2 = 1;
  S_6_0 = (((A>>6)&1) & ((B>>0)&1));
  S_6_1 = S_5_2^(((A>>6)&1) & ((B>>1)&1));
  C_6_1 = S_5_2&(((A>>6)&1) & ((B>>1)&1));
  S_6_2 = (((A>>6)&1) & ((B>>2)&1));
  S_6_3 = (((A>>6)&1) & ((B>>3)&1));
  S_6_4 = (((A>>6)&1) & ((B>>4)&1));
  S_6_5 = (((A>>6)&1) & ((B>>5)&1));
  S_6_6 = (((A>>6)&1) & ((B>>6)&1));
  S_6_7 = 1^(((((A>>6)&1) & ((B>>7)&1)))^1);
  C_6_7 = 1&(((((A>>6)&1) & ((B>>7)&1)))^1);
  S_7_0 = S_6_1^(((((A>>7)&1) & ((B>>0)&1)))^1);
  C_7_0 = S_6_1&(((((A>>7)&1) & ((B>>0)&1)))^1);
  tmp = S_6_2^C_6_1;
  S_7_1 = tmp^(((((A>>7)&1) & ((B>>1)&1)))^1);
  C_7_1 = (tmp&(((((A>>7)&1) & ((B>>1)&1)))^1))|(S_6_2&C_6_1);
  S_7_2 = S_6_3^(((((A>>7)&1) & ((B>>2)&1)))^1);
  C_7_2 = S_6_3&(((((A>>7)&1) & ((B>>2)&1)))^1);
  S_7_3 = S_6_4^(((((A>>7)&1) & ((B>>3)&1)))^1);
  C_7_3 = S_6_4&(((((A>>7)&1) & ((B>>3)&1)))^1);
  S_7_4 = S_6_5^(((((A>>7)&1) & ((B>>4)&1)))^1);
  C_7_4 = S_6_5&(((((A>>7)&1) & ((B>>4)&1)))^1);
  S_7_5 = S_6_6^(((((A>>7)&1) & ((B>>5)&1)))^1);
  C_7_5 = S_6_6&(((((A>>7)&1) & ((B>>5)&1)))^1);
  S_7_6 = S_6_7^(((((A>>7)&1) & ((B>>6)&1)))^1);
  C_7_6 = S_6_7&(((((A>>7)&1) & ((B>>6)&1)))^1);
  S_7_7 = C_6_7^(((A>>7)&1) & ((B>>7)&1));
  C_7_7 = C_6_7&(((A>>7)&1) & ((B>>7)&1));
  P_ = (((C_7_0 & 1)<<0)|((C_7_1 & 1)<<1)|((C_7_2 & 1)<<2)|((C_7_3 & 1)<<3)|((C_7_4 & 1)<<4)|((C_7_5 & 1)<<5)|((C_7_6 & 1)<<6)|((C_7_7 & 1)<<7)) + (((S_7_1 & 1)<<0)|((S_7_2 & 1)<<1)|((S_7_3 & 1)<<2)|((S_7_4 & 1)<<3)|((S_7_5 & 1)<<4)|((S_7_6 & 1)<<5)|((S_7_7 & 1)<<6)|((1 & 1)<<7));
  S_8_0 = (P_ >> 0) & 1;
  S_8_1 = (P_ >> 1) & 1;
  S_8_2 = (P_ >> 2) & 1;
  S_8_3 = (P_ >> 3) & 1;
  S_8_4 = (P_ >> 4) & 1;
  S_8_5 = (P_ >> 5) & 1;
  S_8_6 = (P_ >> 6) & 1;
  S_8_7 = (P_ >> 7) & 1;
  S_8_8 = (P_ >> 8) & 1;
  P = 0;
  P |= (S_6_0 & 1) << 6;
  P |= (S_7_0 & 1) << 7;
  P |= (S_8_0 & 1) << 8;
  P |= (S_8_1 & 1) << 9;
  P |= (S_8_2 & 1) << 10;
  P |= (S_8_3 & 1) << 11;
  P |= (S_8_4 & 1) << 12;
  P |= (S_8_5 & 1) << 13;
  P |= (S_8_6 & 1) << 14;
  P |= (S_8_7 & 1) << 15;
  return P;
}

template <typename scalar_t> // only matmul_cuda_kernel is commented
__global__ void batch_matmul_cuda_kernel(
    const torch::PackedTensorAccessor<scalar_t,3,torch::RestrictPtrTraits> a,
    const torch::PackedTensorAccessor<scalar_t,3,torch::RestrictPtrTraits> b,
    torch::PackedTensorAccessor<scalar_t,3,torch::RestrictPtrTraits> out,
    const int in_size,
    const int a_size,
    const int b_size,
    const int apx_type
    ) {

  const int n = blockIdx.z;
  const int col = blockIdx.y * blockDim.y + threadIdx.y;
  const int row = blockIdx.x * blockDim.x + threadIdx.x;


  if (row < a_size && col < b_size) {
      scalar_t val = 0;

      for (int i = 0; i < in_size; ++i) {
        int8_t a_int = a[n][row][i];
        int8_t b_int = b[n][i][col];
        if (apx_type == 0) {
          int16_t a_int16 = a_int;
          int16_t b_int16 = b_int;
          val += a_int16 * b_int16;
        } else if (apx_type == 1) {
          val += mul8s_1KV6(a_int, b_int);
        } else if (apx_type == 2) {
          val += mul8s_1KV8(a_int, b_int);
        } else if (apx_type == 3) {
          val += mul8s_1KV9(a_int, b_int);
        } else if (apx_type == 4) {
          val += mul8s_1KVP(a_int, b_int);
        } else if (apx_type == 5) {
          val += mul8s_1L2J(a_int, b_int);
        } else if (apx_type == 6) {
          val += mul8s_1L2L(a_int, b_int);
        } else if (apx_type == 7) {
          val += mul8s_1L2N(a_int, b_int);
        } else {
          val += mul8s_1L12(a_int, b_int);
        }
      }

      out[n][row][col] = val;
  }
}
// CUDA kernel for mm_cuda
template <typename scalar_t> // in this particular case scalar_t is int32, but values are within signed 8-bit format
__global__ void matmul_cuda_kernel(
    const torch::PackedTensorAccessor<scalar_t,2,torch::RestrictPtrTraits> a,
    const torch::PackedTensorAccessor<scalar_t,2,torch::RestrictPtrTraits> b,
    torch::PackedTensorAccessor<scalar_t,2,torch::RestrictPtrTraits> out,
    const int in_size,
    const int a_size,
    const int b_size,
    const int apx_type
    ) {

  // CUDA indexing for parallel invocation
  const int col = blockIdx.y * blockDim.y + threadIdx.y;
  const int row = blockIdx.x * blockDim.x + threadIdx.x;

  if (row < a_size && col < b_size) { // iteration over uncommon dimensions of allocated tensors
      scalar_t val = 0; // set-up accumulator (output value) for matrix multiplication
      for (int i = 0; i < in_size; ++i) { // iteration over a common dimension of allocated tensors
        // convert elements of tensors A and B from int32 to int8_t
        int8_t a_int = a[row][i];
        int8_t b_int = b[i][col];
        // selection of approximation mode
        if (apx_type == 0) {
          // no approximation case: convert from int8_t to int16_t to avoid overflow
          int16_t a_int16 = a_int;
          int16_t b_int16 = b_int;
          val += a_int16 * b_int16; // output accumulation
        } else if (apx_type == 1) {
          // pass both int8_t values to device functions responsible for approximate multiplication
          // any custom multiplier with behavioral C-code can be passed in a similar way
          // all invoked approximate functions must be __device__ functions (see examples above)
          // approximate addition can be added instead of += in output accumulator
          // pay attention to used data types inside kernel and device functions
          val += mul8s_1KV6(a_int, b_int); // output accumulation
        } else if (apx_type == 2) {
          val += mul8s_1KV8(a_int, b_int);
        } else if (apx_type == 3) {
          val += mul8s_1KV9(a_int, b_int);
        } else if (apx_type == 4) {
          val += mul8s_1KVP(a_int, b_int);
        } else if (apx_type == 5) {
          val += mul8s_1L2J(a_int, b_int);
        } else if (apx_type == 6) {
          val += mul8s_1L2L(a_int, b_int);
        } else if (apx_type == 7) {
          val += mul8s_1L2N(a_int, b_int);
        } else {
          val += mul8s_1L12(a_int, b_int);
        }
      }
      out[row][col] = val; // assign accumulated result to an element of output tensor A*B
  }
}

torch::Tensor bmm_cuda(
    torch::Tensor a,
    torch::Tensor b,
    int apx_type,
    int threads)
{
  // get output tensor dimensions
  const int batch_size = a.size(0);
  const int a_size = a.size(1);
  const int b_size = b.size(2);

  // set-up output tensor, dtype is int32 since input tensors are int32
  auto options = torch::TensorOptions()
          .dtype(a.dtype())
          .device(torch::kCUDA, a.device().index());
  auto out = torch::zeros({batch_size, a_size, b_size}, options);

  // set-up CUDA blocks and threads
  const int in_size = a.size(2);
  const dim3 threads_per_block(threads, threads, 1);
  const dim3 blocks(a_size / threads + 1,
                    b_size / threads + 1,
                    batch_size);

  // dispatch data to batch_matmul_cuda_kernel
  AT_DISPATCH_ALL_TYPES(a.type(), "batch_matmul_cuda", ([&] {
                  batch_matmul_cuda_kernel<scalar_t><<<blocks, threads_per_block>>>(
                  a.packed_accessor<scalar_t,3,torch::RestrictPtrTraits>(),
                  b.packed_accessor<scalar_t,3,torch::RestrictPtrTraits>(),
                  out.packed_accessor<scalar_t,3,torch::RestrictPtrTraits>(),
                  in_size, a_size, b_size, apx_type);
          } ) );
  return out;
}

torch::Tensor mm_cuda(
    torch::Tensor a,
    torch::Tensor b,
    int apx_type,
    int threads)
{
  // get output tensor dimensions
  const int a_size = a.size(0);
  const int b_size = b.size(1);

  // set-up output tensor, dtype is int32 since input tensors are int32
  auto options = torch::TensorOptions()
          .dtype(a.dtype())
          .device(torch::kCUDA, a.device().index());
  auto out = torch::zeros({a_size, b_size}, options);

  // set-up CUDA blocks and threads
  const int in_size = a.size(1);
  const dim3 threads_per_block(threads, threads);
  const dim3 blocks(a_size / threads + 1,
                    b_size / threads + 1);

  // dispatch data to matmul_cuda_kernel
  AT_DISPATCH_ALL_TYPES(a.type(), "matmul_cuda", ([&] {
                  matmul_cuda_kernel<scalar_t><<<blocks, threads_per_block>>>(
                  a.packed_accessor<scalar_t,2,torch::RestrictPtrTraits>(),
                  b.packed_accessor<scalar_t,2,torch::RestrictPtrTraits>(),
                  out.packed_accessor<scalar_t,2,torch::RestrictPtrTraits>(),
                  in_size, a_size, b_size, apx_type);
          } ) );
  return out;
}
